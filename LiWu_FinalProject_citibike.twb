<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <ParameterAction />
    <ParameterActionClearSelection />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2023_citibike' inline='true' name='federated.11amog00onpv7a1atq6kx106posv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2023_citibike' name='textscan.1wxzcma0qiob0s110b83c018a3ej'>
            <connection class='textscan' directory='C:/00/00-DATA SCIENCE/13-Tableau_PowerBI/0_Resources/JC-2023-citibike-tripdata' filename='2023_citibike.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1wxzcma0qiob0s110b83c018a3ej' name='2023_citibike.csv' table='[2023_citibike#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='ride_id' ordinal='0' />
            <column datatype='string' name='rideable_type' ordinal='1' />
            <column datatype='datetime' name='started_at' ordinal='2' />
            <column datatype='datetime' name='ended_at' ordinal='3' />
            <column datatype='string' name='start_station_name' ordinal='4' />
            <column datatype='string' name='start_station_id' ordinal='5' />
            <column datatype='string' name='end_station_name' ordinal='6' />
            <column datatype='string' name='end_station_id' ordinal='7' />
            <column datatype='real' name='start_lat' ordinal='8' />
            <column datatype='real' name='start_lng' ordinal='9' />
            <column datatype='real' name='end_lat' ordinal='10' />
            <column datatype='real' name='end_lng' ordinal='11' />
            <column datatype='string' name='member_casual' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ride_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ride_id]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>ride_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rideable_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rideable_type]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>rideable_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>started_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[started_at]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>started_at</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ended_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ended_at]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>ended_at</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_name]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>start_station_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_id]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>start_station_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_station_name]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>end_station_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_station_id]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>end_station_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lat]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>start_lat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lng]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>start_lng</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lat]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>end_lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lng]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>end_lng</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_casual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[member_casual]</local-name>
            <parent-name>[2023_citibike.csv]</parent-name>
            <remote-alias>member_casual</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='StartStation(Monthly)' datatype='real' name='[Calculation_1412159985058549760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([start_station_name]) / COUNTD(DATETRUNC(&apos;month&apos;, [started_at]))' />
      </column>
      <column caption='StartStation(Weekly)' datatype='real' name='[Calculation_1412159985059385345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([start_station_name]) / COUNTD(DATETRUNC(&apos;week&apos;, [started_at]))' />
      </column>
      <column caption='EndStation(Weekly)' datatype='real' name='[Calculation_1412159985080475650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([end_station_name]) / COUNTD(DATETRUNC(&apos;week&apos;, [ended_at]))' />
      </column>
      <column caption='EndStation(Monthly)' datatype='real' name='[Calculation_1412159985080745987]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([end_station_name]) / COUNTD(DATETRUNC(&apos;month&apos;, [ended_at]))' />
      </column>
      <column caption='Popular Start Stations' datatype='string' name='[Calculation_1838031624272314368]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;COUNT([start_station_name])&gt;18750&#13;&#10;THEN&#13;&#10;&quot;POPULAR&quot;&#13;&#10;ELSE&#13;&#10;&quot;LESS POPULAR&quot;&#13;&#10;END' />
      </column>
      <column caption='Popular End Staions' datatype='string' name='[Calculation_1838031624274288641]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;COUNT([end_station_name])&gt;18750&#13;&#10;THEN&#13;&#10;&quot;POPULAR&quot;&#13;&#10;ELSE&#13;&#10;&quot;LESS POPULAR&quot;&#13;&#10;END' />
      </column>
      <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
      </column>
      <column caption='Trip Duration (avg)' datatype='string' name='[Calculation_719168594138386432]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;AVG([Calculation_1838031624277565442])&gt;10&#13;&#10;THEN&#13;&#10;&quot;Abv Avg&quot;&#13;&#10;ELSE&#13;&#10;&quot;Less Avg&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Trip Duration (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Calculation_1838031624277565442]' peg='0' size='510' />
      </column>
      <column caption='2023_citibike.csv' datatype='table' name='[__tableau_internal_object_id__].[2023_citibike.csv_31C574EEB1784B229CF6D51003642376]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Id' datatype='string' name='[end_station_id]' role='dimension' type='nominal' />
      <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
      <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
      <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
      <column caption='Ride Id' datatype='string' name='[ride_id]' role='dimension' type='nominal' />
      <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Id' datatype='string' name='[start_station_id]' role='dimension' type='nominal' />
      <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
      <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
      <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
      <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_station_id]' derivation='None' name='[none:start_station_id:nk]' pivot='key' type='nominal' />
      <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1838031624272314368]' derivation='User' name='[usr:Calculation_1838031624272314368:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1838031624274288641]' derivation='User' name='[usr:Calculation_1838031624274288641:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_719168594138386432]' derivation='User' name='[usr:Calculation_719168594138386432:nk]' pivot='key' type='nominal' />
      <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
      <group caption='Action (End Lat,End Lng,End Station Name)' hidden='true' name='[Action (End Lat,End Lng,End Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end_lat:ok]' />
          <groupfilter function='level-members' level='[none:end_lng:ok]' />
          <groupfilter function='level-members' level='[end_station_name]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Name)' hidden='true' name='[Action (End Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[end_station_name]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Name,MONTH(Started At))' hidden='true' name='[Action (End Station Name,MONTH(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[end_station_name]' />
          <groupfilter function='level-members' level='[mn:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Name,Start Station Name,WEEKDAY(Started At))' hidden='true' name='[Action (End Station Name,Start Station Name,WEEKDAY(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[end_station_name]' />
          <groupfilter function='level-members' level='[start_station_name]' />
          <groupfilter function='level-members' level='[wd:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Name,WEEKDAY(Started At))' hidden='true' name='[Action (End Station Name,WEEKDAY(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[end_station_name]' />
          <groupfilter function='level-members' level='[wd:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(Started At))' hidden='true' name='[Action (HOUR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Member Casual)' hidden='true' name='[Action (Member Casual)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[member_casual]' />
        </groupfilter>
      </group>
      <group caption='Action (Rideable Type)' hidden='true' name='[Action (Rideable Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[rideable_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Rideable Type,Start Station Name)' hidden='true' name='[Action (Rideable Type,Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[rideable_type]' />
          <groupfilter function='level-members' level='[start_station_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Lat,Start Lng)' hidden='true' name='[Action (Start Lat,Start Lng)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start_lat:ok]' />
          <groupfilter function='level-members' level='[none:start_lng:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Lat,Start Lng,Start Station Name)' hidden='true' name='[Action (Start Lat,Start Lng,Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start_lat:ok]' />
          <groupfilter function='level-members' level='[none:start_lng:ok]' />
          <groupfilter function='level-members' level='[start_station_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name)' hidden='true' name='[Action (Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start_station_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name,MONTH(Started At))' hidden='true' name='[Action (Start Station Name,MONTH(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start_station_name]' />
          <groupfilter function='level-members' level='[mn:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name,WEEKDAY(Started At))' hidden='true' name='[Action (Start Station Name,WEEKDAY(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start_station_name]' />
          <groupfilter function='level-members' level='[wd:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEKDAY(Started At))' hidden='true' name='[Action (WEEKDAY(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wd:started_at:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (MONTH(Started At),Start Station Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:started_at:ok]' />
          <groupfilter function='level-members' level='[none:start_station_name:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MONTH(Started At),Start Station Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:started_at:ok]' />
          <groupfilter function='level-members' level='[none:start_station_name:nk]' />
        </groupfilter>
      </group>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:start_station_id:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;4060.09&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4510.04&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4987.06&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5216.06&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5411.08&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5613.04&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5847.08&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6079.03&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6364.10&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6560.01&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6756.05&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6953.08&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7365.13&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HB103&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HB506&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JC022&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JC076&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JC109&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4380.08&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4756.04&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5128.04&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5329.08&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5569.06&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5755.01&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6004.06&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6224.05&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6459.04&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6688.01&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6893.10&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7212.05&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8060.01&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HB404&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JC006&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JC057&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JC099&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3814.01&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4446.03&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4824.03&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5184.08&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5359.11&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5593.02&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5788.16&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6046.02&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6289.06&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6511.03&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6740.10&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6926.01&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7304.08&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8262.07&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HB501&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JC014&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JC066&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JC105&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4143.04&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4553.04&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5045.05&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5270.08&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5436.09&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5653.12&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5914.08&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6131.12&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6425.04&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6602.03&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6816.07&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7059.01&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7453.01&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HB203&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HB603&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JC032&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JC081&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4089.01&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4519.02&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4993.02&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5235.05&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5414.07&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5616.01&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5863.07&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6098.02&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6373.07&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6560.15&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6771.13&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6960.10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7382.04&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HB105&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HB507&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JC023&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JC077&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JC110&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3914.02&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4474.01&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4850.04&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5195.06&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5374.01&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5593.04&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5820.08&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6064.08&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6306.06&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6535.04&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6747.06&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6929.01&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7323.09&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8795.01&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HB502&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JC018&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JC072&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JC106&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4366.01&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4665.02&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5114.06&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5303.06&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5532.01&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5746.14&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5971.09&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6209.08&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6450.05&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6676.02&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6876.04&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7204.08&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8008.03&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HB401&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JC002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JC053&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JC097&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3132.09&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4395.07&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4784.02&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5134.09&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5340.01&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5575.13&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5755.09&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6022.04&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6224.06&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6459.07&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6700.14&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6896.16&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7235.13&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8084.03&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HB407&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JC008&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JC059&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JC102&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4317.05&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4651.02&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5065.14&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5294.04&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5492.05&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5721.01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5947.04&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6197.08&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6441.01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6659.03&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6847.02&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7123.04&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7704.04&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HB304&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HB610&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JC051&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JC094&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4010.15&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4483.10&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4906.07&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5198.04&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5391.06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5602.06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5838.09&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6072.06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6316.05&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6541.03&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6747.07&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6932.15&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7360.10&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HB101&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HB503&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JC019&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JC074&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JC107&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4243.01&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4614.04&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5065.04&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5276.04&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5445.02&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5679.08&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5922.04&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6131.13&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6429.01&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6626.01&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6822.09&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7059.08&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7502.01&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HB301&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HB607&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JC034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JC082&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4249.10&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4617.01&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5065.10&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5279.03&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5470.10&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5703.13&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5922.07&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6140.05&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6432.10&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6644.08&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6827.11&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7100.07&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7595.17&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HB302&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HB608&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JC035&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JC084&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4319.07&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4663.06&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5073.07&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5297.02&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5500.07&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5730.08&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5955.12&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6200.03&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6442.08&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6659.09&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6847.05&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7180.02&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7741.01&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HB305&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HB611&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JC052&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JC095&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4368.05&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4683.02&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5117.05&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5303.08&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5553.10&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5752.09&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5989.02&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6212.04&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6450.12&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6679.11&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6889.12&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7207.08&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8040.03&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HB402&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JC003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JC055&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JC098&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4098.06&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4531.05&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5024.10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5247.10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5419.04&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5626.07&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5886.13&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6098.10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6389.09&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6578.01&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6779.05&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7049.04&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7432.09&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HB201&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HB601&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC024&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC078&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC115&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4025.02&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4507.07&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4936.21&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5207.01&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5411.07&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5610.09&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5847.01&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6072.11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6364.07&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6551.11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6753.08&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6948.10&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7365.08&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HB102&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HB505&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JC020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JC075&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JC108&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3263.01&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4404.10&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4812.04&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5164.05&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5348.02&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5578.02&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5788.12&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6030.04&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6257.03&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6495.17&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6717.06&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6912.01&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7260.09&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8226.06&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HB408&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JC009&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JC063&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JC103&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4281.08&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4637.06&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5065.12&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5288.09&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5470.12&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5712.03&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5938.11&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6164.09&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6432.11&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6659.01&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6839.10&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7116.04&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7657.03&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HB303&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HB609&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JC038&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JC093&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4128.08&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4550.05&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5033.01&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5267.08&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5430.10&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5626.13&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5905.14&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6122.09&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6398.06&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6584.12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6809.09&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7052.01&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7443.01&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HB202&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HB602&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JC027&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JC080&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JC116&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3710.07&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4437.09&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4816.05&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5178.06&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5351.07&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5584.04&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5788.15&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6039.06&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6266.06&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6498.09&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6718.02&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6925.09&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7286.01&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8254.01&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HB409&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JC013&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JC065&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JC104&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1838031624272314368:nk]' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;POPULAR&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;LESS POPULAR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1838031624274288641:nk]' type='palette'>
            <map to='#94d0c0'>
              <bucket>&quot;POPULAR&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;LESS POPULAR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start_station_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bergen Ave &amp; Sip Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 167 St &amp; Bryant Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 41 St &amp; Madison Ave (SE corner)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greene St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New York Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Ave &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 170 St &amp; University Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;39 Dr &amp; 52 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4 St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christ Hospital&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delancey St &amp; Eldridge St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; FDR Dr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oakland Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Park - Jackson St &amp; Observer Hwy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Water St &amp;  Fletcher St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;23 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 27 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grant Ave &amp; MLK Dr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Marks Pl &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;81 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;City Hall - Washington St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Square&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 44 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West St &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4 Ave &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;50 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8 Ave &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen St &amp; Kingston Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomfield St &amp; 15 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 43 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint Ave &amp; West St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect Pl &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 171 St &amp; St. Nicholas Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 34 St &amp; Hudson Blvd E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilson Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12 St &amp; Sinatra Dr N&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bergen Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greene Av &amp; Myrtle Av&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perry St &amp; Greenwich Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willow Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Morris St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Journal Square&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 5 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 54 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington St &amp; Barrow St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7 St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ave A &amp; E 11 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dey St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 22 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halsey St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nevins St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spring St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stevens - River Ter &amp; 6 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adams St &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus Park - Clinton St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Main St &amp; Plymouth St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vesey St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 51 St &amp; Rockefeller Plaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8 Ave &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 168 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 39 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hudson St &amp; 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pershing Field&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 20 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 30 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 87 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9 Ave &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; 7 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 11 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Freeman St &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenwich St &amp; Perry St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;River St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warren St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bergen Ave &amp; Stegman St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Newark St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton Ave &amp; E 168 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwich St &amp; Rector St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerome Ave &amp; E Mosholu Parkway S&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myrtle Ave &amp; Grove St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Madison St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park W &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Exchange Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Halsey St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mama Johnson Field - 4 St &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S 4 St &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6 Ave &amp; Walker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astor Place&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 18 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kingsland Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 7 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;53 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beverley Rd &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buffalo Ave &amp; E New York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Church Sq Park - 5 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison Av &amp; E 51 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison St &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Putnam Ave &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adams St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 40 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stockholm St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 30 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7 Ave &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lefferts Ave &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McGinley Square&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sands St Gate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West End Ave &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adams St &amp; 11 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; E 21 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Ave &amp; Covert St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 13 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S 2 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 St &amp; River St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;77 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bleecker St &amp; Crosby St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick Ave &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walker St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;York St &amp; Marin Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 St HBLR - Jackson St &amp; 8 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avenue D &amp; E 10 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Dr at Exchange Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hoboken Ave at Monmouth St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end_station_name:nk]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5 Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9 St HBLR - Jackson St &amp; 8 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick Ave &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Ave &amp; Himrod St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 167 St &amp; Bryant Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 44 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwich St &amp; Rector St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morton St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spring St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;39 Dr &amp; 52 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adams St &amp; 12 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloomfield St &amp; 15 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Ave &amp; Covert St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; FDR Dr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton Ave &amp; E 168 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hudson Blvd W &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orchard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S 4 St &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 170 St &amp; University Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 35 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Water St &amp;  Fletcher St&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4 St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8 Ave &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astor Place&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; E 19 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 26 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 39 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 77 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greene Av &amp; Myrtle Av&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Square&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingsland Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peck Slip &amp; South St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Pl &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 12 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 40 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Broadway &amp; Watts St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bergen St &amp; Kingston Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christ Hospital&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 11 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;King St &amp; Varick St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison Ave &amp; E 51 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Motorgate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N Moore St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;River Ter &amp; Warren St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;York St &amp; Marin Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; Madison St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Duane St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Pkwy &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Exchange Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Journal Square&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morgan Loading Docks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 20 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W Broadway &amp; Watts St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whitehall St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4 St &amp; River St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8 Ave &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boston Rd &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; E 21 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus Park - Clinton St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 10 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 40 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint Ave &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Putnam Ave &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 168th S &amp; Fort Washington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 42 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West End Ave &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;City Hall - Washington St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;12 St &amp; Sinatra Dr N&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adams St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen Ave &amp; Stegman St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 168 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 61 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 13 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 18 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 54 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perry St &amp; Greenwich Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S 2 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 56 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;46 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8 Ave &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albany St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 160 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Newark St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 22 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson St &amp; 4 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McGinley Square&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nevins St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sands St Gate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vesey St &amp; Church St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 35 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Water St &amp; Fletcher St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bergen Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Concourse &amp; E 164 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoboken Ave at Monmouth St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lefferts Ave &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;N 5 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 30 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 30 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 54 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ave A &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; Morris St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buffalo Ave &amp; E New York Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 161 St &amp; River Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 41 St &amp; Madison Ave (SE corner)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jefferson Ave &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pershing Field&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thompson St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 180 St &amp; Ft Washington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;White St &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12 Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beverley Rd &amp; E 49 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 48 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 5 St &amp; Cooper Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 50 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Halsey St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nagle Ave &amp; Thayer St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pearl St &amp; York St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Marks Ave &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warren St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Bergen Ave &amp; Sip Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6 Ave &amp; Walker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ave A &amp; E 11 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Church Sq Park - 5 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 51 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Halsey St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 153 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7 Ave S &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 155 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 13 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 81 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Concourse &amp; E 192 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mama Johnson Field - 4 St &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 7 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 33 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington St &amp; Barrow St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7 St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adams St &amp; 11 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Avenue D &amp; E 10 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bleecker St &amp; Crosby St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 142 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; 7 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 27 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Freeman St &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howard St &amp; Lafayette St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson St &amp; Brooklyn Bridge Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oakland Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pier 40 Dock Station&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 34 St &amp; Hudson Blvd E&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 36 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington St &amp; Laight St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 1 St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenmare St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison Av &amp; E 51 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spruce St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Nicholas Ave &amp; W 150 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 20 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 44 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wadsworth Ave &amp; W 175 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5 Ave &amp; E 87 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ave C &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congress St &amp; Hicks St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 43 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern Pkwy &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenwich St &amp; Perry St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Knickerbocker Ave &amp; Thames St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southwest Park - Jackson St &amp; Observer Hwy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 181 St &amp; Riverside Dr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West St &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick Ave &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park W &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grant Ave &amp; MLK Dr&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sherman Ave &amp; Thayer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 10 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Water St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6 St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beverley Rd &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 14 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lafayette St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison St &amp; 10 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Ave &amp; Grove St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 138 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Marks Pl &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stevens - River Ter &amp; 6 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 25 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 54 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delancey St &amp; Eldridge St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forsyth St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Main St &amp; Plymouth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;River St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stagg St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walker St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willow Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;77 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 180 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabrini Blvd &amp; W 177 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Dr at Exchange Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hudson St &amp; W 13 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect Ave &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South End Ave &amp; Albany St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stockholm St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rideable_type:nk]' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;classic_bike&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;electric_bike&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;docked_bike&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:member_casual:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#b173a0'>
              <bucket>&quot;member&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;casual&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_719168594138386432:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Less Avg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Abv Avg&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='2023_citibike.csv' id='2023_citibike.csv_31C574EEB1784B229CF6D51003642376'>
            <properties context=''>
              <relation connection='textscan.1wxzcma0qiob0s110b83c018a3ej' name='2023_citibike.csv' table='[2023_citibike#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='ride_id' ordinal='0' />
                  <column datatype='string' name='rideable_type' ordinal='1' />
                  <column datatype='datetime' name='started_at' ordinal='2' />
                  <column datatype='datetime' name='ended_at' ordinal='3' />
                  <column datatype='string' name='start_station_name' ordinal='4' />
                  <column datatype='string' name='start_station_id' ordinal='5' />
                  <column datatype='string' name='end_station_name' ordinal='6' />
                  <column datatype='string' name='end_station_id' ordinal='7' />
                  <column datatype='real' name='start_lat' ordinal='8' />
                  <column datatype='real' name='start_lng' ordinal='9' />
                  <column datatype='real' name='end_lat' ordinal='10' />
                  <column datatype='real' name='end_lng' ordinal='11' />
                  <column datatype='string' name='member_casual' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 7 (generated)' name='[Action10_FC65707C888A42328E4BE433C975BE8E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start Station' type='sheet' worksheet='Start_Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Start Station' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action12_0D3AEDBFA947402BA7B55AF97E7E18B7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='End Station' type='sheet' worksheet='End_Station' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='End Station' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action15_584B7F08BF174E08A9A4AA78088DD259]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BikeType' type='sheet' worksheet='Biketype' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Biketype_Start,Biketype_End' />
        <param name='special-fields' value='all' />
        <param name='target' value='BikeType' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 2' name='[Action15_9F0B77C2416C415AAEFEFDE5758C01CC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BikeType' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Biketype_Start,Biketype_End' />
        <param name='field-captions' value='Member Casual,Rideable Type' />
        <param name='target' value='BikeType' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action15_E88AC5F5B9714FF0BF547DE995B6BCD5]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Start_WordCloud' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Start Station Name' />
        <param name='target' value='Start_WordCloud' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action16_8216FF5E39AC482EB13CEC73BDB6C9BB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BikeType' type='sheet' worksheet='Biketype_Start_AVGtrip' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Biketype_Start,Biketype_End' />
        <param name='special-fields' value='all' />
        <param name='target' value='BikeType' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action17_20F32760A6214062A0D790BB233A50E4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BikeType' type='sheet' worksheet='Biketype_End_AVGtrip' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Biketype_Start,Biketype_End' />
        <param name='special-fields' value='all' />
        <param name='target' value='BikeType' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action17_437D54F7B4754971BD1947E534A3E84C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='End Station' type='sheet' worksheet='End_WordCloud' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='End Station' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action17_C1AA766FE4AD455A87EC3547D3CB38FB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start Station' type='sheet' worksheet='Start_WordCloud' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Start Station' />
      </command>
    </action>
    <action caption='Highlight 4 (generated)' name='[Action18_EBE0FB0152944A40BB6CF79BCAE2A5EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Biketype' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Rideable Type' />
        <param name='target' value='Biketype' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action19_4FD34AB4114E46589AB0B930080C0470]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='AVG_trip' type='sheet' worksheet='Weekday_Weekend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='AVG_trip' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_E8E1331ADF344C40A41BFAB032C433DD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start Station' type='sheet' worksheet='Start_Station' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Start Station' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action20_4FA3AC18ED324B279C4835D684ABFD2B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='AVG_trip' type='sheet' worksheet='Hourly' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='AVG_trip' />
      </command>
    </action>
    <action caption='Filter 15 (generated)' name='[Action21_BDB1CC37837B42FB8E5F0F3AF4D18838]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='AVG_trip' type='sheet' worksheet='RouteFrequency' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='AVG_trip' />
      </command>
    </action>
    <action caption='Filter 16 (generated)' name='[Action22_73F78D7E73AD4420BC6BFFAB5858032D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='MemberType' type='sheet' worksheet='Member_Start' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Member_End,Member_Start' />
        <param name='special-fields' value='all' />
        <param name='target' value='MemberType' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_7D74E1CC57554FBAB09D247EE103FBDC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='End Station' type='sheet' worksheet='End_AVGWeek' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='End Station' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_380C89EEA12A4ED0BE0A3D0E4CE3DC59]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='End Station' type='sheet' worksheet='End_Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='End Station' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action5_B92680CBA0484741885ED7DEBD3343DD]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='End_Month' />
      <command command='tsc:brush'>
        <param name='field-captions' value='End Station Name' />
        <param name='target' value='End_Month' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_D6754E0100F6447195FDF9C6665398FE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='MemberType' type='sheet' worksheet='Membertype' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Member_End,Member_Start' />
        <param name='special-fields' value='all' />
        <param name='target' value='MemberType' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action7_E31F4BF823D6421BBC62A38C5438AE2A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Membertype' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Member Casual' />
        <param name='target' value='Membertype' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action9_A1C6E9B9640441D590C8ED4906F763DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start Station' type='sheet' worksheet='Start_AVGWeek' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Start Station' />
      </command>
    </action>
    <edit-parameter-action caption='Start' name='[Action13_3F4AA3769AB54331B4191FAB1951F658]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Member_Start_AVGtrip' />
      <agg-type type='attr' />
      <clear-option type='assign-fixed-value' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Biketype'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>RIDEABLE TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[rideable_type]' derivation='Count' name='[cnt:rideable_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='Count' name='[pcto:cnt:rideable_type:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]'>
            <groupfilter function='level-members' level='[rideable_type]' user:ui-action-filter='[Action13_F1CB0547A3D64496BE2AF1692C8D4BB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_8216FF5E39AC482EB13CEC73BDB6C9BB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[rideable_type]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]' value='8' />
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>854116</value>
                <value>&quot;classic_bike&quot;</value>
                <value>0.86374590307336496</value>
              </tuple>
            </tuple-reference>
            <label-position x='55' y='7' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>132583</value>
                <value>&quot;electric_bike&quot;</value>
                <value>0.13407783376868709</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='30' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2152</value>
                <value>&quot;docked_bike&quot;</value>
                <value>0.0021762631579479619</value>
              </tuple>
            </tuple-reference>
            <label-position x='-47' y='8' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{602E1E2D-2C1D-4137-890F-6E249A86FE16}' />
    </worksheet>
    <worksheet name='Biketype_End'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS BY RIDEABLE TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[rideable_type]' derivation='Count' name='[cnt:rideable_type:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='Count' name='[pcto:cnt:rideable_type:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]'>
            <groupfilter function='level-members' level='[rideable_type]' user:ui-action-filter='[Action15_584B7F08BF174E08A9A4AA78088DD259]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_8216FF5E39AC482EB13CEC73BDB6C9BB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[rideable_type]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</cols>
      </table>
      <simple-id uuid='{4348B883-7072-4A34-B911-C1953832CE13}' />
    </worksheet>
    <worksheet name='Biketype_End_AVGtrip'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS:</run>
            <run>
AVG TRIP DURATION BY BIKE TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]'>
            <groupfilter function='level-members' level='[rideable_type]' user:ui-action-filter='[Action15_584B7F08BF174E08A9A4AA78088DD259]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_8216FF5E39AC482EB13CEC73BDB6C9BB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[rideable_type]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0.00&quot; mins&quot;;-#,##0.00&quot; mins&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk] / [federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk])</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</cols>
      </table>
      <simple-id uuid='{E1F19CD5-8878-49CC-A391-AC194A078FB6}' />
    </worksheet>
    <worksheet name='Biketype_Start'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS BY RIDEABLE TYPES </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[rideable_type]' derivation='Count' name='[cnt:rideable_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='Count' name='[pcto:cnt:rideable_type:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]'>
            <groupfilter function='level-members' level='[rideable_type]' user:ui-action-filter='[Action15_584B7F08BF174E08A9A4AA78088DD259]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_8216FF5E39AC482EB13CEC73BDB6C9BB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[rideable_type]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;docked_bike&quot;</bucket>
              <bucket>&quot;classic_bike&quot;</bucket>
              <bucket>&quot;electric_bike&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type,Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#75a1c7' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' value='LABELS'>
              <formatted-text>
                <run bold='true' fontsize='16'>LABELS</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:rideable_type:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</cols>
      </table>
      <simple-id uuid='{C8E9CBC3-4807-4BF5-980A-A7107299C215}' />
    </worksheet>
    <worksheet name='Biketype_Start_AVGtrip'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS:</run>
            <run>
AVG TRIP DURATION BY BIKE TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]'>
            <groupfilter function='level-members' level='[rideable_type]' user:ui-action-filter='[Action15_584B7F08BF174E08A9A4AA78088DD259]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;docked_bike&quot;</bucket>
              <bucket>&quot;classic_bike&quot;</bucket>
              <bucket>&quot;electric_bike&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:start_station_name:nk]' member='%null%' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;12 St &amp; Sinatra Dr N&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 Ave &amp; E 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;23 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;39 Dr &amp; 52 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 Ave &amp; E 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 St &amp; River St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;46 St &amp; Queens Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Ave &amp; E 87 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Corners Library&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;50 St &amp; Northern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;53 St &amp; Roosevelt Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Walker St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 Ave &amp; W 55 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;77 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 24 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 49 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;81 St &amp; 35 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 39 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 St HBLR - Jackson St &amp; 8 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 11 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Astor Place&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Ave A &amp; E 11 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Avenue D &amp; E 10 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Baldwin at Montgomery&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave &amp; Sip Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave &amp; Stegman St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen St &amp; Kingston Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Beverley Rd &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bleecker St &amp; Crosby St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bloomfield St &amp; 15 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; E 21 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Madison St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Morris St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 168 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brunswick &amp; 6th&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brunswick St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Buffalo Ave &amp; E New York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bushwick Ave &amp; Furman Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Ave &amp; Covert St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Park W &amp; W 91 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Christ Hospital&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Church Sq Park - 5 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;City Hall&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; 7 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; Newark St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Dr at Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Drive&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Park - Clinton St &amp; 9 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Communipaw &amp; Berry Lane&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Delancey St &amp; Eldridge St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Dey St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Dixon Mills&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 11 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 13 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 167 St &amp; Bryant Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 18 St &amp; Church Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 20 St &amp; FDR Dr&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 22 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 27 St &amp; Park Ave S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 39 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 40 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 41 St &amp; Madison Ave (SE corner)&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 43 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Essex Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fairmount Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Freeman St &amp; Southern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fulton Ave &amp; E 168 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Glenwood Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St &amp; 14 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grant Ave &amp; MLK Dr&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene St &amp; Prince St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenpoint Ave &amp; West St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Perry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Rector St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grove St PATH&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Evergreen Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hamilton Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Harborside&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Heights Elevator&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hilltop&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Ave at Monmouth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hudson St &amp; 4 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jackson Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;JC Medical Center&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jerome Ave &amp; E Mosholu Parkway S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;John St &amp; William St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Journal Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Kingsland Ave &amp; Nassau Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lafayette Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lefferts Ave &amp; Schenectady Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Leonard Gordon Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Liberty Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lincoln Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Av &amp; E 51 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Ave &amp; E 26 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison St &amp; 10 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Main St &amp; Plymouth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Mama Johnson Field - 4 St &amp; Jackson St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Manila &amp; 1st&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Marin Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Marshall St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;McGinley Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Monmouth and 6th&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Montgomery St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Morris Canal&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Myrtle Ave &amp; Grove St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;N 5 St &amp; Wythe Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;N 7 St &amp; Driggs Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Nevins St &amp; Schermerhorn St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;New York Ave &amp; St Marks Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newark Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport PATH&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport Pkwy&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Oakland Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pacific St &amp; Smith St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Paulus Hook&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Perry St &amp; Greenwich Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pershing Field&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Prospect Ave &amp; E 167 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Prospect Pl &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Putnam Ave &amp; Knickerbocker Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;River St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Riverview Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 2 St &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 4 St &amp; Roebling St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Sands St Gate&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Southwest Park - Jackson St &amp; Observer Hwy&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Spring St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Marks Pl &amp; 4 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stevens - River Ter &amp; 6 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Union St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Van Vorst Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Vesey St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 170 St &amp; University Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 171 St &amp; St. Nicholas Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 20 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 30 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 30 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 34 St &amp; Hudson Blvd E&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 44 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 51 St &amp; Rockefeller Plaza&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 54 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Walker St &amp; Baxter St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Warren St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Warren St &amp; W Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Square E&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St &amp; Barrow St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Water St &amp;  Fletcher St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West End Ave &amp; W 60 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West St &amp; Liberty St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West Thames St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;White St &amp; Moore St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Willow Ave &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Wilson Ave &amp; Moffat St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;York St &amp; Marin Blvd&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Rideable Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='48' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0.00&quot; mins&quot;;-#,##0.00&quot; mins&quot;' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' id='legend-color' value='dotted' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' id='legend-color' value='#4e79a7' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' id='legend-color' value='2' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' value='LABELS'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#00557f' fontsize='15'>LABELS</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk] / [federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk])</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</cols>
      </table>
      <simple-id uuid='{18697418-8AEE-42A1-84AF-A42440A0E0CA}' />
    </worksheet>
    <worksheet name='End_AVGWeek'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS BY WEEK</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='EndStation(Weekly)' datatype='real' name='[Calculation_1412159985080475650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([end_station_name]) / COUNTD(DATETRUNC(&apos;week&apos;, [ended_at]))' />
            </column>
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1412159985080475650]' derivation='User' name='[usr:Calculation_1412159985080475650:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_0D3AEDBFA947402BA7B55AF97E7E18B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:end_lat:ok]' />
              <groupfilter function='level-members' level='[none:end_lng:ok]' />
              <groupfilter function='level-members' level='[end_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[end_station_name]' user:ui-action-filter='[Action17_437D54F7B4754971BD1947E534A3E84C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_380C89EEA12A4ED0BE0A3D0E4CE3DC59]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' value='128' />
            <format attr='width' field='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985080475650:qk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985080475650:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='598' />
                <format attr='maxheight' value='598' />
                <format attr='minwidth' value='200' />
                <format attr='maxwidth' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985080475650:qk]</rows>
        <cols>([federated.11amog00onpv7a1atq6kx106posv].[wd:started_at:ok] / [federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk])</cols>
      </table>
      <simple-id uuid='{C1DE0563-00AA-4B49-96B4-D9CA6F268C3F}' />
    </worksheet>
    <worksheet name='End_Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS BY MONTH</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='EndStation(Monthly)' datatype='real' name='[Calculation_1412159985080745987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([end_station_name]) / COUNTD(DATETRUNC(&apos;month&apos;, [ended_at]))' />
            </column>
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1412159985080745987]' derivation='User' name='[usr:Calculation_1412159985080745987:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_0D3AEDBFA947402BA7B55AF97E7E18B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:end_lat:ok]' />
              <groupfilter function='level-members' level='[none:end_lng:ok]' />
              <groupfilter function='level-members' level='[end_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[end_station_name]' user:ui-action-filter='[Action17_437D54F7B4754971BD1947E534A3E84C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_7D74E1CC57554FBAB09D247EE103FBDC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok]' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985080745987:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='588' />
                <format attr='maxheight' value='588' />
                <format attr='minwidth' value='200' />
                <format attr='maxwidth' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985080745987:qk]</rows>
        <cols>([federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok] / [federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk])</cols>
      </table>
      <simple-id uuid='{EAFB3C02-04FD-4789-821B-99A7C7D57F8F}' />
    </worksheet>
    <worksheet name='End_Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>END STAIONS MAP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[end_station_name]' user:ui-action-filter='[Action17_437D54F7B4754971BD1947E534A3E84C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_380C89EEA12A4ED0BE0A3D0E4CE3DC59]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_7D74E1CC57554FBAB09D247EE103FBDC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_lng:qk]' field-type='quantitative' max='-8239733.8355775168' min='-8242805.5785170915' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_lat:qk]' field-type='quantitative' max='4974281.2918897206' min='4970528.9831009246' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.69999998807907104' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[none:end_lat:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:end_lng:qk]</cols>
      </table>
      <simple-id uuid='{6134FC6A-64E0-450F-9C3F-D63E71F1AC3E}' />
    </worksheet>
    <worksheet name='End_Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='20'>TOP END STATIONS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[end_station_id]' derivation='Count' name='[cnt:end_station_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Id' datatype='string' name='[end_station_id]' role='dimension' type='nominal' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;12 St &amp; Sinatra Dr N&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen Ave &amp; Sip Ave&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grove St PATH&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hamilton Park&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Newport PATH&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Newport Pkwy&quot;' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' value='141' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</cols>
      </table>
      <simple-id uuid='{8D300C47-6B04-4DD6-8401-42B65323E1AA}' />
    </worksheet>
    <worksheet name='End_WordCloud'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_0D3AEDBFA947402BA7B55AF97E7E18B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:end_lat:ok]' />
              <groupfilter function='level-members' level='[none:end_lng:ok]' />
              <groupfilter function='level-members' level='[end_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_380C89EEA12A4ED0BE0A3D0E4CE3DC59]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_7D74E1CC57554FBAB09D247EE103FBDC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[end_station_name]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,WEEKDAY(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,MONTH(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Lat,End Lng,End Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' />
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2A7028BE-BFB7-4074-A067-7E5D06910D31}' />
    </worksheet>
    <worksheet name='Hourly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>AVERAGE TRIP DURATIONS AT DAYTIME</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column caption='Trip Duration (avg)' datatype='string' name='[Calculation_719168594138386432]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;AVG([Calculation_1838031624277565442])&gt;10&#13;&#10;THEN&#13;&#10;&quot;Abv Avg&quot;&#13;&#10;ELSE&#13;&#10;&quot;Less Avg&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:ok]' pivot='key' type='ordinal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719168594138386432]' derivation='User' name='[usr:Calculation_719168594138386432:nk]' pivot='key' type='nominal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,Start Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action21_BDB1CC37837B42FB8E5F0F3AF4D18838]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[start_station_name]' member='&quot;Hamilton Park&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[end_station_name]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Grove St PATH&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[wd:started_at:ok]' member='1' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='2' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='3' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='4' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='5' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='6' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='7' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[end_station_name]' />
                <hierarchy name='[start_station_name]' />
                <hierarchy name='[wd:started_at:ok]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,Start Station Name,WEEKDAY(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0&quot; mins&quot;;-#,##0&quot; mins&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[hr:started_at:ok]</cols>
      </table>
      <simple-id uuid='{9F9049A8-A1EE-459A-844D-662720AD02E1}' />
    </worksheet>
    <worksheet name='Member_End'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS BY MEMBER TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[end_station_name]' derivation='Count' name='[cnt:end_station_name:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='Count' name='[pcto:cnt:member_casual:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]'>
            <groupfilter function='level-members' level='[member_casual]' user:ui-action-filter='[Action6_D6754E0100F6447195FDF9C6665398FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' value='56' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='#000000' />
            <format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='8' />
            <format attr='text-format' data-class='total' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</cols>
      </table>
      <simple-id uuid='{C4EDA763-869D-4B9B-AE3E-95761907400F}' />
    </worksheet>
    <worksheet name='Member_End_AVGtrip'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP END STATIONS:</run>
            <run>
AVG TRIP DURATION BY MEMBER TYPES </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]'>
            <groupfilter function='level-members' level='[member_casual]' user:ui-action-filter='[Action6_D6754E0100F6447195FDF9C6665398FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='55' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' value='20' />
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0.00&quot; mins&quot;;-#,##0.00&quot; mins&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='29' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='bold' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='dotted' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='#b07aa1' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='10' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='Tableau Light' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='Tableau Regular' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' value='LABELS'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='16'>LABELS</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk] / [federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk])</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</cols>
      </table>
      <simple-id uuid='{BFD8640D-BBAC-436C-BE48-31F3D861DA2A}' />
    </worksheet>
    <worksheet name='Member_Start'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS BY MEMBER TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='Count' name='[pcto:cnt:member_casual:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]'>
            <groupfilter function='level-members' level='[member_casual]' user:ui-action-filter='[Action6_D6754E0100F6447195FDF9C6665398FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' value='52' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='#000000' />
            <format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='8' />
            <format attr='text-format' data-class='total' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</cols>
      </table>
      <simple-id uuid='{99492BE2-2E08-4069-B825-990F97A63D62}' />
    </worksheet>
    <worksheet name='Member_Start_AVGtrip'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS:</run>
            <run>
AVG TRIP DURATION BY MEMBER TYPES </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]'>
            <groupfilter function='level-members' level='[member_casual]' user:ui-action-filter='[Action6_D6754E0100F6447195FDF9C6665398FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:start_station_name:nk]' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Member Casual)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='55' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' value='20' />
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0.00&quot; mins&quot;;-#,##0.00&quot; mins&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='bold' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='dotted' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='#b07aa1' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='10' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='Tableau Light' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='2' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='Tableau Regular' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' id='legend-color' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' value='LABELS'>
              <formatted-text>
                <run fontcolor='#aa007f' fontname='Tableau Light' fontsize='15'>LABELS</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk] / [federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk])</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</cols>
      </table>
      <simple-id uuid='{6174498E-FFD1-41C9-AB0B-3A2F67DB6102}' />
    </worksheet>
    <worksheet name='Membertype'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>MEMEBER TYPES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[member_casual]' derivation='Count' name='[cnt:member_casual:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='Count' name='[pcto:cnt:member_casual:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:member_casual:qk]' />
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:member_casual:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>257068</value>
                <value>&quot;casual&quot;</value>
                <value>0.25996636500342318</value>
              </tuple>
            </tuple-reference>
            <label-position x='27' y='18' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:member_casual:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>731783</value>
                <value>&quot;member&quot;</value>
                <value>0.74003363499657682</value>
              </tuple>
            </tuple-reference>
            <label-position x='-25' y='-15' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{81E05196-964C-474C-B09A-FAF4F7276206}' />
    </worksheet>
    <worksheet name='RouteFrequency'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>ROUTE FREQUENCY BY WEEK</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <groupfilter expression='COUNT([end_station_name]) &gt;= 24000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;1 Ave &amp; E 6 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;10 Ave &amp; W 14 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;11 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;12 Ave &amp; W 125 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;12 St &amp; Sinatra Dr N&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;2 Ave &amp; E 29 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;2 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;23 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;27 Ave &amp; 3 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;31 St &amp; Ditmars Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;39 Dr &amp; 52 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;4 Ave &amp; 3 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;4 Ave &amp; E 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;4 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;4 St &amp; River St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;46 St &amp; Queens Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Ave &amp; E 30 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Ave &amp; E 87 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Ave &amp; W 126 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;5 Corners Library&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; W 45 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 Ave &amp; Walker St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;6 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;7 Ave S &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;7 St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;77 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 24 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 38 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 Ave &amp; W 49 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;8 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;9 Ave &amp; W 39 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;9 St HBLR - Jackson St &amp; 8 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Adams St &amp; 11 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Adams St &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Adams St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Albany St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 180 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Astor Place&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Ave A &amp; E 11 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Ave A &amp; E 14 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Ave C &amp; E 16 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Avenue D &amp; E 10 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Baldwin at Montgomery&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bedford Ave &amp; Montgomery St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen Ave &amp; Sip Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen Ave &amp; Stegman St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bergen St &amp; Kingston Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Beverley Rd &amp; E 49 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Beverley Rd &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bleecker St &amp; Crosby St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bloomfield St &amp; 15 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Boston Rd &amp; Prospect Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; E 19 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; E 21 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; Madison St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; Morris St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 142 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 155 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 160 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 168 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 48 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Broadway &amp; W 61 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Brunswick &amp; 6th&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Brunswick St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Buffalo Ave &amp; E New York Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bushwick Ave &amp; Furman Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Bushwick Ave &amp; Stagg St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Cabrini Blvd &amp; W 177 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Ave &amp; Covert St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Ave &amp; Himrod St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Park W &amp; W 91 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Christ Hospital&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Church Sq Park - 5 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;City Hall&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Clinton St &amp; 7 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Clinton St &amp; Cherry St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Clinton St &amp; Newark St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbus Dr at Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbus Drive&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Columbus Park - Clinton St &amp; 9 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Communipaw &amp; Berry Lane&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Congress St &amp; Hicks St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Delancey St &amp; Eldridge St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Dey St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Dixon Mills&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Duane St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 1 St &amp; Bowery&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 10 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 11 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 13 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 13 St &amp; Ave A&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 14 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 161 St &amp; River Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 167 St &amp; Bryant Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 18 St &amp; Church Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 20 St &amp; FDR Dr&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 22 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 26 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 27 St &amp; Park Ave S&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 39 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 40 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 40 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 41 St &amp; Madison Ave (SE corner)&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 43 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 44 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 5 St &amp; Cooper Sq&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 50 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 51 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 53 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 54 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 56 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 56 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 77 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 81 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Eastern Pkwy &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Eastern Pkwy &amp; Schenectady Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Essex Light Rail&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fairmount Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Forsyth St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Freeman St &amp; Southern Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fulton Ave &amp; E 168 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fulton St &amp; Irving Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Glenwood Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand Concourse &amp; E 164 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand Concourse &amp; E 192 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand St &amp; 14 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grant Ave &amp; MLK Dr&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Great Jones St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greene St &amp; Prince St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenpoint Ave &amp; West St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich St &amp; Perry St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich St &amp; Rector St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Grove St PATH&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Halsey St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Halsey St &amp; Evergreen Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hamilton Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Harborside&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Heights Elevator&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hilltop&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hoboken Ave at Monmouth St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Howard St &amp; Lafayette St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hudson Blvd W &amp; W 36 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hudson St &amp; 4 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Hudson St &amp; W 13 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Jackson Square&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;JC Medical Center&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Jefferson Ave &amp; Evergreen Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;John St &amp; William St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Johnson St &amp; Brooklyn Bridge Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Journal Square&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Kenmare St &amp; Elizabeth St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;King St &amp; Varick St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Kingsland Ave &amp; Nassau Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Knickerbocker Ave &amp; Thames St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lafayette Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lafayette St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lefferts Ave &amp; Schenectady Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Leonard Gordon Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Liberty Light Rail&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lincoln Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison Av &amp; E 51 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison Ave &amp; E 26 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison Ave &amp; E 51 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Madison St &amp; 10 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Main St &amp; Plymouth St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Mama Johnson Field - 4 St &amp; Jackson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Manila &amp; 1st&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Marin Light Rail&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Marshall St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;McGinley Square&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Monmouth and 6th&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Montague St &amp; Clinton St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Montgomery St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Morgan Loading Docks&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Morris Canal&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Morton St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Motorgate&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Myrtle Ave &amp; Grove St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;N 5 St &amp; Wythe Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;N 7 St &amp; Driggs Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;N Moore St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Nagle Ave &amp; Thayer St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Nevins St &amp; Schermerhorn St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Newark Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Newport PATH&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Newport Pkwy&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Oakland Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Orchard St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pacific St &amp; Smith St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Paulus Hook&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pearl St &amp; York St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Peck Slip &amp; South St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Perry St &amp; Greenwich Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pershing Field&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pier 40 Dock Station&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Prospect Ave &amp; E 167 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Prospect Pl &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Putnam Ave &amp; Knickerbocker Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;River St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;River Ter &amp; Warren St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverside Dr &amp; W 138 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverside Dr &amp; W 153 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Riverview Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;S 2 St &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;S 4 St &amp; Roebling St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Sands St Gate&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Sherman Ave &amp; Thayer St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;South End Ave &amp; Albany St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Southwest Park - Jackson St &amp; Observer Hwy&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Spring St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Spruce St &amp; Gold St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Spruce St &amp; Nassau St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;St Marks Ave &amp; Rochester Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;St Marks Pl &amp; 4 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;St Nicholas Ave &amp; W 150 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stagg St &amp; Morgan Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stanton St &amp; Norfolk St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Steinway St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stevens - River Ter &amp; 6 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Union St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Van Vorst Park&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Vesey St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 10 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 12 St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 168th S &amp; Fort Washington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 17 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 170 St &amp; University Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 180 St &amp; Ft Washington Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 181 St &amp; Riverside Dr&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 20 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 20 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 25 St &amp; 9 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 30 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 30 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 33 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 34 St &amp; Hudson Blvd E&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 35 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 35 St &amp; 9 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 36 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 40 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 42 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 44 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 54 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 54 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 56 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 87 St &amp; West End Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;W Broadway &amp; Watts St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Wadsworth Ave &amp; W 175 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Walker St &amp; Baxter St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Warren St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Warren St &amp; W Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington Square E&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington St &amp; Barrow St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Washington St &amp; Laight St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Water St &amp;  Fletcher St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Water St &amp; Fletcher St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Water St &amp; Gouverneur Ln&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;West Broadway &amp; Watts St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;West End Ave &amp; W 60 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;West St &amp; Liberty St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;West Thames St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;White St &amp; Johnson Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;White St &amp; Moore St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Whitehall St &amp; Bridge St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Willow Ave &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Wilson Ave &amp; Moffat St&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                <groupfilter function='member' level='[none:end_station_name:nk]' member='&quot;York St &amp; Marin Blvd&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:start_station_name:nk]' member='%null%' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;12 St &amp; Sinatra Dr N&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 Ave &amp; E 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;2 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;23 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;39 Dr &amp; 52 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 Ave &amp; E 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;4 St &amp; River St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;46 St &amp; Queens Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Ave &amp; E 72 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Ave &amp; E 87 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;5 Corners Library&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;50 St &amp; Northern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;53 St &amp; Roosevelt Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 Ave &amp; Walker St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;6 St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 Ave &amp; W 55 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;7 St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;77 St &amp; 31 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 24 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 49 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;8 St &amp; Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;81 St &amp; 35 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 39 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;9 St HBLR - Jackson St &amp; 8 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 11 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Adams St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Astor Place&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Ave A &amp; E 11 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Avenue D &amp; E 10 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Baldwin at Montgomery&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave &amp; Sip Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave &amp; Stegman St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen St &amp; Kingston Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Beverley Rd &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bleecker St &amp; Crosby St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bloomfield St &amp; 15 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; E 21 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Madison St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; Morris St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 168 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brunswick &amp; 6th&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Brunswick St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Buffalo Ave &amp; E New York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bushwick Ave &amp; Furman Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Ave &amp; Covert St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Central Park W &amp; W 91 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Christ Hospital&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Church Sq Park - 5 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;City Hall&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; 7 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; Newark St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Dr at Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Drive&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Columbus Park - Clinton St &amp; 9 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Communipaw &amp; Berry Lane&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Delancey St &amp; Eldridge St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Dey St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Dixon Mills&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 11 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 13 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 167 St &amp; Bryant Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 18 St &amp; Church Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 20 St &amp; FDR Dr&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 22 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 27 St &amp; Park Ave S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 39 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 40 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 41 St &amp; Madison Ave (SE corner)&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 43 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Essex Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Exchange Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fairmount Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Freeman St &amp; Southern Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fulton Ave &amp; E 168 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Glenwood Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St &amp; 14 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grant Ave &amp; MLK Dr&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greene St &amp; Prince St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenpoint Ave &amp; West St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Perry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; Rector St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grove St PATH&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Evergreen Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hamilton Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Harborside&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Heights Elevator&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hilltop&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Ave at Monmouth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hudson St &amp; 4 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jackson Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;JC Medical Center&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jerome Ave &amp; E Mosholu Parkway S&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;John St &amp; William St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Journal Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Kingsland Ave &amp; Nassau Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lafayette Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lefferts Ave &amp; Schenectady Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Leonard Gordon Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Liberty Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lincoln Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Av &amp; E 51 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Ave &amp; E 26 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Madison St &amp; 10 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Main St &amp; Plymouth St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Mama Johnson Field - 4 St &amp; Jackson St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Manila &amp; 1st&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Marin Light Rail&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Marshall St &amp; 2 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;McGinley Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Monmouth and 6th&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Montgomery St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Morris Canal&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Myrtle Ave &amp; Grove St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;N 5 St &amp; Wythe Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;N 7 St &amp; Driggs Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Nevins St &amp; Schermerhorn St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;New York Ave &amp; St Marks Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newark Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport PATH&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport Pkwy&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Oakland Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pacific St &amp; Smith St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Paulus Hook&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Perry St &amp; Greenwich Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pershing Field&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Prospect Ave &amp; E 167 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Prospect Pl &amp; Nostrand Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Putnam Ave &amp; Knickerbocker Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;River St &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Riverview Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 2 St &amp; Kent Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;S 4 St &amp; Roebling St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Sands St Gate&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Southwest Park - Jackson St &amp; Observer Hwy&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Spring St &amp; Hudson St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;St Marks Pl &amp; 4 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stevens - River Ter &amp; 6 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Union St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Van Vorst Park&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Vesey St &amp; Church St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 170 St &amp; University Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 171 St &amp; St. Nicholas Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 20 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 30 St &amp; 10 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 30 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 34 St &amp; Hudson Blvd E&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 44 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 51 St &amp; Rockefeller Plaza&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 54 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Walker St &amp; Baxter St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Warren St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Warren St &amp; W Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington Square E&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St &amp; Barrow St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Water St &amp;  Fletcher St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West End Ave &amp; W 60 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West St &amp; Liberty St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;West Thames St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;White St &amp; Moore St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Willow Ave &amp; 12 St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Wilson Ave &amp; Moffat St&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;York St &amp; Marin Blvd&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk] / [federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk])</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[wd:started_at:ok]</cols>
      </table>
      <simple-id uuid='{C6586410-E063-4130-B76B-C664B7B4DCA7}' />
    </worksheet>
    <worksheet name='Start_AVGWeek'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS BY WEEK</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='StartStation(Weekly)' datatype='real' name='[Calculation_1412159985059385345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([start_station_name]) / COUNTD(DATETRUNC(&apos;week&apos;, [started_at]))' />
            </column>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1412159985059385345]' derivation='User' name='[usr:Calculation_1412159985059385345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E8E1331ADF344C40A41BFAB032C433DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_lat:ok]' />
              <groupfilter function='level-members' level='[none:start_lng:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E8E1331ADF344C40A41BFAB032C433DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_lat:ok]' />
              <groupfilter function='level-members' level='[none:start_lng:ok]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[start_station_name]' user:ui-action-filter='[Action2_F8E8D3F7987344B69558566565F759C0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,MONTH(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FC65707C888A42328E4BE433C975BE8E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[start_station_name]' />
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt; 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,MONTH(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' value='121' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985059385345:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1412159985059385345:qk]</rows>
        <cols>([federated.11amog00onpv7a1atq6kx106posv].[wd:started_at:ok] / [federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk])</cols>
      </table>
      <simple-id uuid='{640B857C-ACCC-4D03-8CE8-A0A67ECF54AF}' />
    </worksheet>
    <worksheet name='Start_Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>TOP START STATIONS BY MONTH</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E8E1331ADF344C40A41BFAB032C433DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_lat:ok]' />
              <groupfilter function='level-members' level='[none:start_lng:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E8E1331ADF344C40A41BFAB032C433DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_lat:ok]' />
              <groupfilter function='level-members' level='[none:start_lng:ok]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[start_station_name]' user:ui-action-filter='[Action2_F8E8D3F7987344B69558566565F759C0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_A1C6E9B9640441D590C8ED4906F763DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[start_station_name]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Exclusions (MONTH(Started At),Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
              <groupfilter function='level-members' level='[none:start_station_name:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,WEEKDAY(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Exclusions (MONTH(Started At),Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='512' />
                <format attr='maxheight' value='512' />
                <format attr='minwidth' value='1640' />
                <format attr='maxwidth' value='1640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</rows>
        <cols>([federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok] / [federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk])</cols>
      </table>
      <simple-id uuid='{BAE2E429-A6CC-4982-A2C4-A863637A5D15}' />
    </worksheet>
    <worksheet name='Start_Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>START STATIONS MAP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[start_station_name]' user:ui-action-filter='[Action2_F8E8D3F7987344B69558566565F759C0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,MONTH(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FC65707C888A42328E4BE433C975BE8E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[start_station_name]' />
              <groupfilter function='level-members' level='[mn:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_A1C6E9B9640441D590C8ED4906F763DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[start_station_name]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,WEEKDAY(Started At))]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Station Name,MONTH(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_lng:qk]' field-type='quantitative' max='-8236264.6519493638' min='-8246989.8406544924' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_lat:qk]' field-type='quantitative' max='4976233.6251084469' min='4969851.0558754085' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.69999998807907104' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-grey-light' />
            <format attr='geo-area-type' value='Zip Code' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='has-halo' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[none:start_lat:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:start_lng:qk]</cols>
      </table>
      <simple-id uuid='{76323A37-C6C1-44C5-90C0-14D3BF9DAAA8}' />
    </worksheet>
    <worksheet name='Start_Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='20'>TOP START STATIONS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E8E1331ADF344C40A41BFAB032C433DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_lat:ok]' />
              <groupfilter function='level-members' level='[none:start_lng:ok]' />
              <groupfilter function='level-members' level='[start_station_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;11 St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Bergen Ave &amp; Sip Ave&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Grove St PATH&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hamilton Park&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport PATH&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Newport Pkwy&quot;' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (Start Lat,Start Lng,Start Station Name)]</column>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' value='135' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</cols>
      </table>
      <simple-id uuid='{6F4D39A8-2822-4BA4-973E-A5B1ACF1846D}' />
    </worksheet>
    <worksheet name='Start_WordCloud'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column-instance column='[start_station_name]' derivation='Count' name='[cnt:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <groupfilter expression='COUNT([start_station_name]) &gt;= 18750' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' id='legend-color' value='Tableau Semibold' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' id='legend-color' value='10' />
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' id='legend-color' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' id='legend-color' value='15' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' />
              <size column='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{976B24B6-03D7-4562-A1DC-A1C6FD53B5FD}' />
    </worksheet>
    <worksheet name='Weekday_Weekend'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>AVERAGE TRIP DURATION (WEEKDAY VS WEEKEND)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2023_citibike' name='federated.11amog00onpv7a1atq6kx106posv' />
          </datasources>
          <datasource-dependencies datasource='federated.11amog00onpv7a1atq6kx106posv'>
            <column caption='Trip Duration' datatype='integer' name='[Calculation_1838031624277565442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [started_at], [ended_at])' />
            </column>
            <column caption='Trip Duration (avg)' datatype='string' name='[Calculation_719168594138386432]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;AVG([Calculation_1838031624277565442])&gt;10&#13;&#10;THEN&#13;&#10;&quot;Abv Avg&quot;&#13;&#10;ELSE&#13;&#10;&quot;Less Avg&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1838031624277565442]' derivation='Avg' name='[avg:Calculation_1838031624277565442:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719168594138386432]' derivation='User' name='[usr:Calculation_719168594138386432:nk]' pivot='key' type='nominal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,Start Station Name,WEEKDAY(Started At))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action21_BDB1CC37837B42FB8E5F0F3AF4D18838]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[start_station_name]' member='&quot;Hamilton Park&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[end_station_name]' member='&quot;City Hall - Washington St &amp; 1 St&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Grove St PATH&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;' />
                    <groupfilter function='member' level='[end_station_name]' member='&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[wd:started_at:ok]' member='1' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='2' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='3' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='4' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='5' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='6' />
                    <groupfilter function='member' level='[wd:started_at:ok]' member='7' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[end_station_name]' />
                <hierarchy name='[start_station_name]' />
                <hierarchy name='[wd:started_at:ok]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11amog00onpv7a1atq6kx106posv].[Action (End Station Name,Start Station Name,WEEKDAY(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='n#,##0&quot; mins&quot;;-#,##0&quot; mins&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#fffef5' />
            <format attr='background-color' data-class='subtotal' value='#fffef5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]' />
              <text column='[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</rows>
        <cols>[federated.11amog00onpv7a1atq6kx106posv].[wd:started_at:ok]</cols>
      </table>
      <simple-id uuid='{A7ECD498-9D3F-494A-BBC5-3DF043D39BDA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='AVG_trip'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='49107' id='3' name='Hourly' w='59684' x='39731' y='1451' />
        <zone h='98549' id='4' name='RouteFrequency' w='39087' x='644' y='1228' />
        <zone h='48884' id='5' name='Weekday_Weekend' w='59977' x='39789' y='51228' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='72' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98549' id='4' is-fixed='true' name='RouteFrequency' w='39087' x='644' y='1228'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='3' is-fixed='true' name='Hourly' w='59684' x='39731' y='1451'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48884' id='5' is-fixed='true' name='Weekday_Weekend' w='59977' x='39789' y='51228'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{48981AE2-8B5E-4A1D-A346-D20C63913EC0}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='BikeType'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='35714' id='91' name='Biketype' w='15495' x='400' y='670' />
        <zone h='35268' id='92' name='Biketype_Start' w='37695' x='15906' y='1004' />
        <zone h='35603' id='93' name='Biketype_End' w='45258' x='54082' y='1004' />
        <zone h='62612' id='94' name='Biketype_Start_AVGtrip' w='53481' x='300' y='37277' />
        <zone h='63281' id='96' name='Biketype_End_AVGtrip' w='45618' x='53962' y='37165' />
        <zone h='14063' id='97' name='Biketype_Start_AVGtrip' pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type-v2='color' w='6846' x='91691' y='1786' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='175' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='174' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='35714' id='91' is-fixed='true' name='Biketype' w='15495' x='400' y='670'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35268' id='92' is-fixed='true' name='Biketype_Start' w='37695' x='15906' y='1004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35603' id='93' is-fixed='true' name='Biketype_End' w='45258' x='54082' y='1004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63281' id='96' is-fixed='true' name='Biketype_End_AVGtrip' w='45618' x='53962' y='37165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62612' id='94' is-fixed='true' name='Biketype_Start_AVGtrip' w='53481' x='300' y='37277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14063' id='97' name='Biketype_Start_AVGtrip' pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type-v2='color' w='6846' x='91691' y='1786'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2760BADA-F208-4FC1-A4D3-3AF6D3221570}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='End Station'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='50446' id='30' name='End_Station' w='19075' x='80339' y='48996' />
        <zone h='46094' id='28' name='End_AVGWeek' w='99414' x='391' y='1953' />
        <zone h='51004' id='27' name='End_Month' w='57870' x='585' y='48326' />
        <zone h='50000' id='149' name='End_WordCloud' w='21299' x='58748' y='49665' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='193' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='192' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='46094' id='28' is-fixed='true' name='End_AVGWeek' w='99414' x='391' y='1953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51004' id='27' is-fixed='true' name='End_Month' w='57870' x='585' y='48326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50446' id='30' is-fixed='true' name='End_Station' w='19075' x='80339' y='48996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='149' is-fixed='true' name='End_WordCloud' w='21299' x='58748' y='49665'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F4E3D9B7-00DF-4C19-B96D-037FB8BE68C4}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='MemberType'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='35714' id='5' name='Membertype' w='15495' x='400' y='670' />
        <zone h='35268' id='6' name='Member_Start' w='37695' x='15906' y='1004' />
        <zone h='35603' id='7' name='Member_End' w='45258' x='54082' y='1004' />
        <zone h='62612' id='16' name='Member_Start_AVGtrip' w='53481' x='300' y='37277' />
        <zone h='10938' id='17' name='Member_Start_AVGtrip' pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type-v2='color' w='6085' x='93037' y='1004' />
        <zone h='63281' id='82' name='Member_End_AVGtrip' w='45618' x='53962' y='37165' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='168' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='167' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='35714' id='5' is-fixed='true' name='Membertype' w='15495' x='400' y='670'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35268' id='6' is-fixed='true' name='Member_Start' w='37695' x='15906' y='1004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35603' id='7' is-fixed='true' name='Member_End' w='45258' x='54082' y='1004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63281' id='82' is-fixed='true' name='Member_End_AVGtrip' w='45618' x='53962' y='37165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62612' id='16' is-fixed='true' name='Member_Start_AVGtrip' w='53481' x='300' y='37277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10938' id='17' name='Member_Start_AVGtrip' pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type-v2='color' w='6085' x='93037' y='1004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C5C00913-094C-42FE-8EE3-909C9E5F6567}' />
    </dashboard>
    <dashboard name='STORY' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00557f' fontname='Benton Sans Book' fontsize='40'>2023 THE NEW YORK CITIBIKE ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='font-weight' value='bold' />
          <format attr='border-style' value='dotted' />
          <format attr='text-align' value='center' />
          <format attr='vertical-align' value='center' />
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#00000000' />
          <format attr='border-width' value='3' />
          <format attr='font-size' value='20' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='527' />
          <format attr='background-color' value='#a0cbe8' />
          <format attr='color' value='#00557f' />
          <format attr='font-weight' value='bold' />
          <format attr='font-family' value='Tableau Book' />
          <format attr='font-size' value='12' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='20' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='7143' id='3' type-v2='title' w='99064' x='468' y='893' />
            <zone fixed-size='79' h='8817' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='8036' />
            <zone h='82254' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='16853'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='What are the spatial patterns of CitiBike usage?' captured-sheet='Start Station' id='1'>
                    <capturedDeltas>
                      <worksheet name='Start_Station'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_lat:qk]' field-type='quantitative' max='4977859.9118090477' min='4967346.6846454553' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_lng:qk]' field-type='quantitative' max='-8237797.2103283443' min='-8248081.8884889744' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='What are the spatial patterns of CitiBike usage?' captured-sheet='End Station' id='2'>
                    <capturedDeltas>
                      <worksheet name='End_Station'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_lat:qk]' field-type='quantitative' max='4978771.468906912' min='4968009.9514827309' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_lng:qk]' field-type='quantitative' max='-8237894.5915906858' min='-8248524.0662449747' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Who are the primary users, and what are their behaviors?' captured-sheet='MemberType' id='3' />
                  <story-point caption='Which type of bike is used most frequently across different stations?' captured-sheet='BikeType' id='7' />
                  <story-point caption='What are the ridership patterns across time?' captured-sheet='AVG_trip' id='9'>
                    <capturedDeltas>
                      <worksheet name='Hourly'>
                        <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (WEEKDAY(Started At))]'>
                          <groupfilter function='level-members' level='[wd:started_at:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='RouteFrequency'>
                        <filter class='categorical' column='[federated.11amog00onpv7a1atq6kx106posv].[Action (WEEKDAY(Started At))]'>
                          <groupfilter function='level-members' level='[wd:started_at:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{1FB416D3-061A-4E61-868B-5884B04D1F0B}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Start Station'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='50558' id='3' name='Start_Station' w='18666' x='80749' y='48884' />
        <zone h='46094' id='20' name='Start_AVGWeek' w='99414' x='391' y='1953' />
        <zone h='51004' id='23' name='Start_Month' w='57812' x='585' y='48326' />
        <zone h='50893' id='147' name='Start_WordCloud' w='21826' x='58631' y='48772' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='193' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='192' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='46094' id='20' is-fixed='true' name='Start_AVGWeek' w='99414' x='391' y='1953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51004' id='23' is-fixed='true' name='Start_Month' w='57812' x='585' y='48326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50893' id='147' is-fixed='true' name='Start_WordCloud' w='21826' x='58631' y='48772'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50558' id='3' is-fixed='true' name='Start_Station' w='18666' x='80749' y='48884'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4BDE017E-F42B-49C1-AB34-A855B2453262}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Start_Station' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='207'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_id:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7B3ECCFD-60A8-4FA9-9FF3-8CD9D34C01A9}' />
    </window>
    <window class='worksheet' name='Start_Top' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='207'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>18792</value>
                <value>&quot;11 St &amp; Washington St&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>20698</value>
                <value>&quot;Bergen Ave &amp; Sip Ave&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>20700</value>
                <value>&quot;Newport Pkwy&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>21594</value>
                <value>&quot;Hamilton Park&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>23370</value>
                <value>&quot;Newport PATH&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24252</value>
                <value>&quot;City Hall - Washington St &amp; 1 St&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>27262</value>
                <value>&quot;Hoboken Terminal - Hudson St &amp; Hudson Pl&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>31288</value>
                <value>&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>43698</value>
                <value>&quot;Hoboken Terminal - River St &amp; Hudson Pl&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>47010</value>
                <value>&quot;Grove St PATH&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:ride_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{968C5610-757E-4301-92AE-6F047F0F22CB}' />
    </window>
    <window class='worksheet' name='Start_Month' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1899579A-8296-4C89-8E13-5645DCE21A69}' />
    </window>
    <window class='worksheet' name='Start_AVGWeek' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6609D4A4-25F8-4297-A352-E71FA6DF685E}' />
    </window>
    <window class='worksheet' name='Start_WordCloud' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB0F8991-5CA8-40B0-8BED-2581308C4D03}' />
    </window>
    <window class='worksheet' name='End_Station' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='292'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:end_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3408CAB7-B5E6-4F51-B5E7-6450EC954ECA}' />
    </window>
    <window class='worksheet' name='End_Top' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624274288641:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36BF4214-8AB0-4058-BB89-34B1445FA784}' />
    </window>
    <window class='worksheet' name='End_Month' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99A8982B-A6FC-4983-87D0-9BA81214A013}' />
    </window>
    <window class='worksheet' name='End_AVGWeek' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D14424B-4A53-47FC-A1DC-D3A0C12CB09B}' />
    </window>
    <window class='worksheet' name='End_WordCloud' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E36061D-741F-4000-B9E6-413DDBF31186}' />
    </window>
    <window class='worksheet' name='Membertype' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[cnt:member_casual:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:member_casual:qk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
                  <field>[federated.11amog00onpv7a1atq6kx106posv].[pcto:cnt:member_casual:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>731783</value>
                <value>&quot;member&quot;</value>
                <value>0.74003363499657682</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{73F280CC-2BDF-4A6B-A12A-2A14A2C5A939}' />
    </window>
    <window class='worksheet' name='Member_Start_AVGtrip' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:ended_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Calculation_441071316473659392:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Trip Duration (bin):qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[tmn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624274288641:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:ended_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DF587EA-3C47-4F47-96A2-DA16A49F4325}' />
    </window>
    <window class='worksheet' name='Member_End_AVGtrip' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[mn:ended_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Trip Duration (bin):qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[tmn:started_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624274288641:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:ended_at:ok]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0513D0D8-B4D8-423D-A190-D6DC285E0DAB}' />
    </window>
    <window class='worksheet' name='Member_Start' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Trip Duration (bin):qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43099B28-17BF-4B61-9DCA-DFB135854438}' />
    </window>
    <window class='worksheet' name='Member_End' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Trip Duration (bin):qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEAF8D60-1A89-4E1A-978D-893E090C0A6E}' />
    </window>
    <window class='worksheet' name='Biketype' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[cnt:rideable_type:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{238E457C-9C5D-4354-989C-F174E92094CA}' />
    </window>
    <window class='worksheet' name='Biketype_Start_AVGtrip' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C96200B6-BC30-4A98-B715-D45C3DB3B3FD}' />
    </window>
    <window class='worksheet' name='Biketype_End_AVGtrip' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4246094-B7C6-4CDF-B1C7-87C816127208}' />
    </window>
    <window class='worksheet' name='Biketype_Start' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D7F2107-7DC4-475C-AA32-1FB6EF413583}' />
    </window>
    <window class='worksheet' name='Biketype_End' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33BACC20-9B8B-44BC-BD7C-60A6FD272C63}' />
    </window>
    <window class='worksheet' name='Weekday_Weekend' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[avg:Calculation_1838031624277565442:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CF24378-E39A-4C9E-9C8C-2D90AC2B6F38}' />
    </window>
    <window class='worksheet' name='Hourly' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_719168594138386432:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFF061C7-0F04-4B66-92D5-4C569E040676}' />
    </window>
    <window class='worksheet' maximized='true' name='RouteFrequency' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[cnt:start_station_name:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:Calculation_1838031624277565442:qk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:ride_id:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624272314368:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[usr:Calculation_1838031624274288641:nk]</field>
            <field>[federated.11amog00onpv7a1atq6kx106posv].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFD5B971-44C2-4CBA-92F2-090BD29864E5}' />
    </window>
    <window class='dashboard' name='Start Station' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Start_AVGWeek'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Start_Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Start_Station'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Start_WordCloud'>
          <zoom type='entire-view' />
          <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C0CB3135-72D7-4ADC-B0FB-71D2C2C024D7}' />
    </window>
    <window class='dashboard' name='End Station' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='End_AVGWeek'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='End_Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='End_Station'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='End_WordCloud'>
          <zoom type='entire-view' />
          <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:end_station_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{16C1E766-DD97-4500-A9BF-AACA631E0BBE}' />
    </window>
    <window class='dashboard' name='MemberType' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='Member_End'>
          <zoom type='entire-view' />
          <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Member_End_AVGtrip' />
        <viewpoint name='Member_Start'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Member_Start_AVGtrip'>
          <zoom type='entire-view' />
          <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:member_casual:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Membertype'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{91A6C246-0F07-4C76-8C57-4515EE9F72FB}' />
    </window>
    <window class='dashboard' name='BikeType' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='Biketype'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Biketype_End'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Biketype_End_AVGtrip' />
        <viewpoint name='Biketype_Start'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Biketype_Start_AVGtrip'>
          <highlight field='[federated.11amog00onpv7a1atq6kx106posv].[none:rideable_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5E89A368-2A04-4C93-A366-B1D50CE8BDC9}' />
    </window>
    <window class='dashboard' name='AVG_trip' tab-color='#a65200'>
      <viewpoints>
        <viewpoint name='Hourly'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='RouteFrequency'>
          <zoom type='fit-height' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.11amog00onpv7a1atq6kx106posv].[none:start_station_name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Hamilton Park&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Weekday_Weekend'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CDED73BD-A8BC-48A1-B826-8FE557090CDE}' />
    </window>
    <window class='dashboard' name='STORY' tab-color='#72bcbb'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{BC226655-71E4-4D93-A596-A07699FC25AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AVG_trip' width='192'>
      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
      nn4UaW9jif8PV4XhkoQA9akAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BikeType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Biketype' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Biketype_End' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Biketype_End_AVGtrip' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WYxk6XXn97t73Nj3iFwi18rM2nphL2yqm5REtkhQIqWBYEgDDGRYDxYM
      L/SLPX4wBoafDMMY2H4wYHiAsT0PA2Hk0XigIUxaZrNJsdXshdXd1V17VWZW7pGx73H364dc
      qmvrzuqKqoyqit9LVWZGnPi+G3Hifuf7zv8cwfd9nxEjnlHE4x7AiBHHyTPjAIZh4DjOcQ9j
      xJDxzDiA67qMVnsj7uSZcYARI+7FyAFGPNOMHGDEM4188B/HcZ7qNbLjOIjiyN9H3M5tDuC6
      7nGO5ZHiOA69xmeI4sM7ued5A3OmZ8GW7/sIgjAQO8BAbB3MT7j9IMynuHYdMT6FVd+kaQqc
      WZzi0oXLxDITxCMBQqEQ68tXMQSdxbkCy1cvgZ4gl4wSDodve5Fut0soFLrtd51WheXlLXKF
      GfLpGAA3rlxicnKMhqOTjwfu+3zD6CPLGrJ8640xul3kUAh5//HBUAjHtrEs67bndrtdLr/9
      JoLfeeiLN+LpQb79R4F8Jsmm4ZPOZHFqex8Wz/NwzC6/uX6Zb3zjt7BME19VcXzwPR9JEKjV
      a2ys3MBVQjjNbfpKHLddp1AoYMgatdULhMZPU8gEmF84RWl3lfNry8yffg5FldleW8FLLe2P
      w+fmjWs0+g5RTUSJpLDbVVwlQEjW0EMqu6U6qUSI1esbPPfN15CB0tYaPVciHAkj+R7dbg+c
      Ph1HJpeKPdYLO+LJ4A4H8NnY2GTD0KlYdbREHnwfSVYwPYFEJAiAYZlUyx3m56cRJYlOp0sk
      KBPPjCH4FjvdILoWQFOiiJLGzFSe1vYGkmci+irXr14ikc+SHU8S1hXaegTXbmMe3Nk8i74t
      EpQ9uo6CVN3ClyLEdJ+N7V102aTasXD8PMl49HD0kqIRwKTW6hEVDZq9EI3tG4jRsZEDjLgn
      wrDmArUbNVB0cAwkLYRrdkDR0RUJ23Fpd3rEIjrtrkm3WaHdsxmbGEMQJMLBAIIg4HkenmPR
      t0FTxNESaMRdDK0DDJput4uqKsiy/OUP/hJc10WSpAGMai84H8SYBm3LdRykAdjyfR/P8wZy
      vTzPAxhIcH5wrQZztZ4Qfr1zE8QB7CDs72o8vCXwfA9RGMxuy0Isw1gk/tB2fN8HQUQYyLh8
      BIGB2DrY/BmMrb35DbkDWGxvtRifSB/+pt1uE4lEAOh22uihyG2f6XK5TCadpt1tYfRdMpnk
      4d8u13ZwBvGpHVKygTBBT+DcuXN87Wtf42c/+xm/93u/hyAI/PznP+fUqVOsrq6ysLDAwsLC
      4fNqtRqxWGxgd7UnieF0AM/mrZ/+hPD4DKlgkH/3r3/O5MJJPE/EMloUZgoU1yvEU1FEtvGV
      CHPT4wjAxuo1Ko0OuuZT2ihimRN88N4HLLz4jeOe1WMhFouRSCTo9XqIoohlWTSbTX77t3+b
      1dVVJEnC8zzef/99rl27hqZpjI+PI0kSN27cIJPJYFkWf/AHf3DcU3ksDO3RaGa8wEQ+jaYq
      jE/Pk0vHEQUYz+fxBIHCzByhgLL3hjomWxsb7JQqyMreOl8UJcbGchiGzcz8IvGwftxTeixU
      q1U+/vhjqtUqqqpSr9dRVZVf/OIXSJKE67pYlkUsFuP111/n61//OqIoEovFeOONNygUCrTb
      7eOexmPjqQiCPdeh3ekiSjLhUIh7HRR2u13+vnQTfxCniL6POAA7g7Z1JplnMpr88gd+Cb7v
      47ruQALqYQ+CnwoHOAp7u0AqiqI8tC3HcZAkaSBH8sO4C/QsOcBwxgD77E1YQDzCzo3vefiC
      gCgIeK6LIEl37dKc+p//T1r2AFRhPgxkC2gAtv7Lb77CP/7WK/T7fVRVxbZtABRFodVqoWka
      nU4HTdPuSlUZMaxBMFCvFOn0+qhaDMPskc8mKFU7xEMyhicjeBYSHmIgSiys02kWWd+1mJlM
      0tgqE5iZIOS5VBtdxvNZAGp9g6b1dMkie7aDbdv87Gc/43vf+x5vvfUW4+PjPP/883z22Wf0
      +32CwSCdTodvfvObXL16FUVRyOVymKZJtVplenqa9fV1nnvuuYHc1Z4khtMBnD7FWo90VKHV
      rLG5uUG3N0avb2PoIo4cRvE6OGjMztxa88YiKteurxIRJZYvXSMt2dR6LqlU6hgn8+hRVZW5
      uTk2NzdZXV3F931efPFFZFnmtddeY21tjbNnz7K5uYlpmrRaLRqNBp1Oh3w+z/vvv0+j0eDU
      qVMDWSI+SQynA0gBwoqHhUoioWHaY6RTCeqNLtGQguGrRIMROo0aG+trGIZBNBal1WwzMzcD
      pkMqIGL3DGh2kSUB1z7uST06DMNgeXmZhYUF/uIv/oJarUapVGJnZ4doNEo8HicajeK6LplM
      BsdxME0T27bJZDJEIhHW19efuW9/+NwukG3bh0HG00i/3+dnq1u4A1i8753eCgwiEPA8F1H8
      6gHiyUyCk/uHfYNM0RikrUFpCwapBziY36EDmKb51DuA2To/EsQ8dlv+viDm8TqAHl1E0e6/
      9L3LAQ64cfkzOo7M88+dOtIpmWv3uLq8w+mT83cOlxtXLiIGk8xN5bn82aeEUuMkokEiR9yN
      6HQ6t+1cGEYPSQqgKJ8TxHQ6yOEw8v7jQ+EwtmVhWdZtzx0JYp4t5l75nxD0V/nwww958cUX
      +eSTT3jttddQFIV3332XM2fOcPny5btjAMMwsD2N6599yKWbTU6eyKIHQjQaVRQtxuWL5zl9
      9nl63RZTSy9BYxdBgs31dSRFoVJc48ZOhz/8/new+gaq7uP6wv7hlE+tXmH16lWUaJJTC7P3
      Hr3vsXr9Kk3DI6wKKJEkdruGrwUIiip6WKO4L4hZu7F5KIgpb69z0xGJRCOIvken00VwDTqO
      TD798EliI54sdF2n1+vRbDYpFArU63VEUaRWq/HrX/+al1566e4v+YPDAVGPcHJxlmgySyYe
      wvMcLAfmFk4RjwZZWjqB73g0Ox2sdh1R19mttohEYpw8MYfo2diCSGmnCIKHKMj0+33Ax7Lt
      L15f+jZ9RyQge/RckW69SN+T0USf7d0KmzeX2S5uU6l3iUVvyR5FWUEVXertHla3QbXZ4frV
      K+yWq4/g8o4YdtrtNolEguvXr7O6ukokEqHRaJBMJjEMgxs3bhztJNgxulxbWWd2YQldedi1
      nEenYxAOB7/wUd1OCyQNwTURVR3P6oOsockijuvR6xmEgho9w6JV3aXVs5koTCKJEnpARRAE
      fM/Dcx1M10cS4Oovvw+DWAIN0UHYM2Xr4JN6BFuzL/1TgslvUiqVSCQSVCoVkskkqqpSqVRI
      p9M0Go1RKsRXYZQK8WC2nqhUiFppk3LbZ2F2AthPMUBAlp/8XPF3tpfxByCI8T0fYQB29mx5
      CPd5Q+djGaYHkNw24v7cJYrf2SnRsmBTcnB92Fq5ihvK8zvfePEYhmextdlkYjJz+JtWq0U0
      uieEv7cgpkQmndkTxPRcMtlbH6Br9d0nShAT14JkFZ23336b73znO7z11lv84Ac/oN/v85Of
      /ITp6WkqlQqZTIaXXnrp8HmdTgdRFAkGv3iZOeIOB/B9n1gyQwqfQCRCo2cxPjkF+mPeQfEs
      fvaTnxCZmCWl6/zN//U2hcUlXFfCNlsUZibZWasST0UQ/S3Qop8TxFynXG+ja1DeKGKYE/zm
      /Q+fWEGMruuMj48fCldg733q9Xo4jkMkEsF1XS5cuMC5c+cQRZGlpSXa7TaVSoVoNMrOzg5/
      /ud/PqqMdw9ucwBBEJksFA5/jscBco95SAACuclpErkMWA6F2RPkMyl2Sw2yY2N4gsj03Dye
      3cK2TQy7z+rKCkoghKKqqKqGInuMT45jWS4zJ/YFMU/gEUC32+X8+fPIssynn35KILBXnCwU
      CmFZFt1ul2QySSgU4nd/93fxPI9Go0E0GuWFF15ge3ubSqWC67ojB7gHT0UQ7HsufcNEECUC
      mnZfQcx75fXBxAADKvX3ZbYW4hmmo0dP5BsFwUdnJIh5CEa7QA9ma5gdYDizQffxPBcfAekI
      E/Y8FxARRQHPcUCW7zrlm/2n/5ym9fjTQv+Dl87wv/zhd6hUKkQikUOtbiAQwLIsIpHIM1mR
      YRgYWgeo7G7RNUw0LUqn12Eyn2an0iQZVuh7CqJvI3o2UjBBIhKk29xldavH3HSGxnYFfXqc
      oOdSqraZmhwDoGfb9AahCHtALMfFNE1+8YtfkE6n+da3vsXa2hrVahVBEHj++eeJRCJ88skn
      aJpGJpNBEAQ2NzdZWFjg2rVrvPbaa89kuvKjZjgdwOlTadlkogr1RoNicRvTNrFNF9cQcOUg
      ktPBFXXmkur+kwSymQjXrq8SlWRWLl0nJVm0Lcjmssc6HdjLPvQ8D0EQEEUR13V59dVXqdfr
      ANTrdTzPw7ZtLl68SDweJxgM8sEHH1CtVnnppZdQVfVLXmXEgzKcDiAFCCsuph8kldaxXZdM
      KkH1NkFMlE6jxtraTQzDIBaL0Wp1mF+Yxzcc0gERp99HaHRQJBHzmAUxgUCAbDbL1NQUOzs7
      lMtlZFmmVCoRi8U4e/YsS0tLCIJAu91G0zRCoRDhcJjl5eXRDs4j4jAItizrqdcD/GqjiDcQ
      EYu3L9Q/mq3JWJizufQ9/zasIpZB2RrWIPguPYBlWU91i6Rer4fR/BBRGJQgZlCKsGEUsTz5
      gpgv474dYjZWb9DzVCZySXyfwzqcAJVymZhi01DGyIQEGpUinbZDanaSR1F37fN1QAH6/S6y
      HEBRbn2b9Ntt5EgEZf/x4UgE0zCwbfu2544EMSPuxe0xgO/hoLI0P83a6nW2NnfI5scJhXVC
      8RylnXU2OjWCEwK/+PGv+Nprr+J3bVxg4+Yy2cl5tEFEFb7HyvWrtAyPkAJKJIHdroOmowky
      wZDKVrFKLhNjfXmL5775GgpQ2dng5rpAJBZD8mw6nR6e1abtKBTy916CjHi2uf2+JIiIrsHV
      5TUkOUA+lyaVy7C+WSKiy6Rzk5w5dRLPsjgxN4GLhhbQEIHCzIA+/AC+Tc/00SSXng3dRom+
      I6KIPuVqne2NNcrVCtVGl1Do1r1HlGRkHBrtLna/Q63ZYW1lhVqjNaCBjXja+NKT4H67gYF6
      2B7pcWH0eyAq4NmIsobnmAiSgiIJuJ6PYVromoJp2VR3t2n1bCanp1BkGU2R9wQxvo/nOjje
      XrrEtXf+AYL38EugYdSKPAu2HkAPcyRbAk9JLtBRGKVCHJ1nNhXC913W17ep726Tn5oiEImh
      iiKqLOB4AqXiNtn8OGa/TyCg4osyku/i+FCtVMjmcti2TUBTMQ2LQFBn+fJnmFKIZFgjlcnT
      r29z4doOr3zzNZxmlY1Sk1OLcw89oaPwn/zNW/Tdh9/qfdhkuH/8rVd5YSzz5Q8c8ci5Ix1a
      wnO6hGJRNrer5JNt3v9shdPTaXpiDM3r0OrZ6IpIv9tA0MKIjoXhuHiOg9FtY3sehumiKDA2
      sUg6k+FmsUG5VCcYTeIjoQYV+q0OiXiKSKd/38F1mhVsQiRid+8x3Vkypdeu4koxdMmhUaqi
      FyYI3fGcv754fShqg/7Zi6cJtGpcvXqV119/HUEQePfdd8lms6yvr/P6668zMTFx+PhyuUw6
      nR6lQjwC7rrHRbUA5LKwu4umycxMTZJIRRENn0xyBnxwHJtkMgECrN24Qp8gk6kYohqgV2+Q
      GxsnHtXwPZFW20CWZbKJDKbtIPs+AUXG9aFZ3WVnZ4d4Jk/48xG0a3H+04uEo2FUocXf/uQj
      Xnhhie2aSSZg4YfHCcsmy9c7jM8skklEcG2DK1fXCYV0NNvlRrNJEoNPb+zwwx/8/mO8pEdD
      URQMw2Bzc5OzZ88yNjaGaZq8+eabbGxsHFYyCAaD5HI5BEFgbW3tsJXRD3/4w+OewlPBXQ6Q
      mpzZ+ze8V7MnM7YnkMnfx4A/O4+ix4iE9jq8T04Wbvt7KDTL2G2/iZLKT+7/P8yrqXsIbkSR
      gKYgKyqu7bK4ME8wGifcLZPIjFHtOmgBHdu0aNVK1ErbBAIysigQCoeRLZ+8LuD3FU6ejCCL
      4B7xgjwuotEoqqqSTqe5dOkS6+vrLC0t8fbbb/PGG28QDAYpFApIkkSlUiEWi1EoFOj1eqyu
      rh738J8abg+CfZ/d7XUMAkzkUgMLzh4lnuvieh6iKCFJ9w+Out0u/+Tn72F4Dx/zP2wM8J99
      42ucye0JXUZB8NF59IIY3+OzTz4ikS+wfv0yp1/+LeIh7aFfbBgY7QIdnWfJAe6YoUB+fIKt
      UoVsPk9AOW6Rho9tuSjq0d+IWx8CH8e5/U38Py7+GnsAuUBflT+YOctUOM7m5iaFQgFBENja
      2iKdTlMqlSgUCk/EXfdp4q6rres6J+bnkXx7cCchD4rvU9rZQIlEqe12CCgWsewE1e0NyvUa
      +YlpNMHHcD2S0SDlpsH0ZB4BuHD+NxROPIdjNrFNiCciVEoloqksPsd95OHzySefHOb+A2xs
      bBAMBtna2qLdbpPJZLh58yaiKJJIJIhEIqyurjI9PU29Xufs2bPHPIeni9sdQBAIRw9KoAQe
      /2gOcA0uX18jO55BcV2u3Kww1qigZ0+RllTG82EuXyoT1h3Wt9qcOHGrMnUinaNS3EJSYHdl
      DXt+nq1imbQ/HJ1PDnp2eZ5Hv99na2sLURSxbRtFUdjY2EAQBFRVZW1tjXA4jKqqrK+v79dW
      HTFIhvN+KwWYmxpDDscJqhqiKBLNjNMobZNMJ9nebTM9PYbvGSRci7WbNzFNA0WPIjt9ktlJ
      VMkjnxnDskxs0yQSCcMQtL8tFAoUi0XC4fBtS59r166Rz+fJZDJ7abqCQCaTQdM0JEmiXq8/
      U/17HxeHQbBhGE+9IKZq9+9bhvBB+Kq58qlAiIB8+51oGEUsg7Tl+3t6gEF1iBmUrYP5Hd4B
      ZFl+qh1AlmUirfOI4sPP0fM8REF84BjJ7sOdykzP9RC/YPv2gcY1KFv+fhuoQQhi/P1t4wHV
      Y8JnILYOrtU9BTFtw2dhaZEvqoS+dXOZpuGSz+dJxqN0K1tc3qwwPjFNfWeNuRPzfPzRx0wU
      ptCjSaxei8nPHe8fhc/XAYX7CGJaLeRodE8Q02oRjkYx+n1s277tuSNBzIh7cZcgxvZVArRY
      v3kd2xXpt+toeohoJEyv1eSzC5d45Xe+T1BTcLs2K9cu0p9eJOpZOAiY3Sa+Z1NsuYxNjDGZ
      S/LBp1ewHP/oDuB7LF+7Qtv0CMqghOPYnSZCIIDiSwRDCutbZcbzKTZXt28JYoqb3FyHSDyO
      6Ji0Oz3cfoOWozI7eRwlHkcMO3fsAolIvkGj75BKxCgkY1y93CIQitFtVslNjDFnesRCKlbT
      x/dccrm9RAdZC3HmzCx+fRPTSeH2m4S0AIgS8wsnsXoPIErxbXqGiyL5dC1QWlUcVyKq+9Tr
      TVpNk2bbQNcDBAK3SoUIogi+SbPdJSI7tA2X1u4mhEcf/hH3Zmj1ALZlgiiB5yJICr5rgygh
      iXtCF9t2URQJx3HZ3Vqn1bOZmp1FU2RkWULgIGjycD1wbIsb7/4J+N2HH9wwqkWeFVuDYn9M
      Q+sAg2aUCnF0nuFUiKebtzauDq5DjCB84bdaXNP5rbHHI/QZ8dUZcgew2FivU5i6tYZvNJrE
      4zHg3h1idneL5LI52t0WvY5N7nPVINZa1cfWISYX3Gtc8c4771AqlfiTP/kTdnZ2+PDDD8nn
      85RKpdty+l3XpdFokEodvRz6iIdnOB3ANfl//5+fEC/MkdID/N9/9QtmFhawPRXX2usQs7Va
      IZ4KI/jrSHrisEPM1toypVobXfOpbBYxzEl+88FvWPrabz32aUiSxNmzZymXy/i+z3vvvYfr
      umQyGYrFIr1ej3/1r/4VAFNTU+i6zrVr1xgfH+fdd9/lRz/60cghHjHD6QCCRGFmlmgmg+j4
      zJ1YIJvPUy7VSGYm8ASJ+cUFPKeNbZt0+10uXbyAokfRtAB6KERA8ZmZm8WwHU4sLh1bh5hK
      pcLCwgKVSoXnn3+elZUVtra20LS9FI/f+Z3fQRRF+v0+vu/z7W9/G8MwaLfbmKb5+Af8jPFM
      BcEf17YfW4eYqBrghczkFz4GRkHwgzAKgh+SlzJTSAN4U13X2X9D73YCRRIRR+L1J4ahdgDX
      sfGRkOUv93jXtQEZSRJwbRsUhTu/cyb/h3/2yKtC/PI//FNenxpjeXmZ2dlZWq0Wm5ubTExM
      UC6XOXHixEj0MkQM5zuxr03uWQ66HqXRajI1nmG73CIZljF8DdG3EBwTOZwmFQvRa5W4vt5m
      fjpLa6eGNp0n5HkUK01mp798KTJIPvnkk8P/a5pGs9lE0zR2dnZQFAVZltna2kKWZYLBILFY
      jM3NTXL7dZWWlpYe63ifZYbTAVyDRl8gE9Wo1hrUSjt4vodtOQiujCNYSG4HTwoxlzvQLItM
      jqdYXlknKsmsXlkhKZr0PJmJ/f66j4tut3vYo3d+fh5ZlikUCmxtbQGwu7uL7/uHTtHpdFBV
      le3tbTzPGznAY2Q4HUAKENVcLILk8yE8QSCTiVFt9IkGJUwhQCyYoNOocXPtJkbfIJZI0GnV
      WDy5gG865DQJp2+wW2uiyCLuY+wQ8+qrr/Lee+8Rj8fp9XosLi7S7/fxPI98Pk8ikQD2grlU
      KkUwGEQQBMrlMq47bAVcnm4Od4H6/f5TffENw+DTcg1/AI0avkgPcDqTJKIdvZfXMIpYBmlr
      0IIYGEyDjLs6xLiu+9R3iOlWfj44QczQdWIZUlv7DvCwSrx47tsI0l6xy0eiCDvw9tLuLiHJ
      wgwVSN5RktPotdmpNMklIsihGOod42hXd7mxsU0mP81kPnn4+9LuLtncg6ckN5tNYrHY4c+9
      XgdZ1lHVW99MvWYTJRZDAVrNJpFYjF6vh2Pbtz1XkiS2Lv33I0HME0o0+W+pVDqcP3+ekydP
      srq6yne+8x3q9TrvvfceX/va1zh37hzf+c53bqsZW6/Xicfj97xr3PMcoLS9jtFrEck5vPXx
      R5x94SyNUgWUAJO5GC1TwK5v40cztEpVwokE3XqRSHqSXFjC832MdoW//tVbnDz1HL6qYlQ3
      caUAY+nYXYO4J77HjatX6FgeuryBEophdZpIegDRlQgFJVY3dilM5ti+uXMoiKnubnFzY5No
      PIFg92l3etjdKk1bZWHmwdRoI4aPbDZLOp1mY2ODSqXC+vo6rVYLURQplUrA3of6vffeY2Nj
      g0gkwsTEBFevXqVaraLrOplMhueee+7Q5l0OkJucISRZbNUdFuanCISSnFxM4kgCrmUQlkTS
      yQkqfQ9NlQgEdLILp/BcF1mROX3meZxOlfkTC6hagKn5KRphGcs0gKM6gEO3byFJAl3DQ/Hq
      OLZPRIdOu023Y9I3DJqtLrLyuSkIAp5j0ux0icoenXaHdnkXQiNBzNPABx98QLlc5sUXX6Rc
      LqOqKvF4nOvXr2NZFo7jsL29jaZpnDhxAlEUqdfrRCIRpqam2Nra4vLly7c5wNCmQniuC4IA
      vg+CCL4HgnCr84vnI4kCnu+xtbZKq2czMz+Prir7HRxhr0PhngnD6LP8/p8heL0BjG5Y1SJP
      r62Fb/xvSNoEruuiKMptgfXBet5xnMO/3YuDRuUHj727NuhTzEgQc3RGuUBPKX+7dhlvYMlw
      MIhvSN/3DnvofnN8nkTg8fZie9YZWgfwPA8Ee08QU8ggCCK+51FvNEkk9so39nod9GAEgb1t
      NgHY2d4mNzZGt9Okuy+I8T0PH9js1B+bIOarYLrTlEolLl68yMTEBL/5zW/4wQ9+QLvd5u/+
      7u+YmZlhY2OD73//+0QikcNvxHq9TjKZxHVdRFHE9/2BnQc87QynA7gm/99PfkqiMEcyoPI3
      f/0rpk/M4xDYF8RMsLlcJp4Kgb+BGkoyU9irTlHcWqPS7KJrPuWNbQxzio/PfcTCC68d86SO
      RjabZWtri2azyfe+9z12d3dZXFxkbm6OQqHA7u4unU6HDz/8kPX1dSKRCKlUCt/32dnZQdM0
      gsEgP/jBD457Kk8Ew+kAosTUzCyRdBrJE5g7cYLMWJ5KqUpifAzXF5lfXMR329i2RafX+Zwg
      RkMPhwmoPpGFRUzLYu7E4rEJYh6Ura0tLl68yIsvvsgvf/lLvvWtb9Hr9UilUiiKgqIoSJLE
      /Pz8YZ5Ro9EgHA4zOztLu92mWq0e9zSeGJ6pIPjTRhEGUVbP8z+30zQ4W2dT40TUr16VexQE
      H51nMgheiuUHIohxHBdpv/bQV0UWRUKqMtBdoBEPzlBfedex8JBQ5C//9nAdG1+QkSUB17JA
      Ve8SxJz4H//3oWiTCvCHJ+f4t3/2D1heXmZ8fJxIJMLy8jKw960ZDofJ5+/XmnDEoBhOB/B9
      djbXMBwXPRCl0WowOZamWGmTCEkYBBA9ExwLNZrZE8S0S1xfazE7laW9W0cr5Aj5e4KYuZnC
      l7/mMdDr9bhy5Qpra2t897vf5erVq7z66qs0m03OnTvHd7/7Xd555x1UVWV8X9OwtrbGwsIC
      169f54033kBVj555OuJuhtMBXIOWKZKJylSqdaqlIp4AlmkhegoWNrLX3RPEhD4niJlIs3pz
      g6gkc/PaKgnBpO8rD1yV+nGh6zqzs7Ncv34d3/dJp9O88847nD17FkVR6Pf7h+1Ub9y4QTKZ
      JB6Ps7KyQrFYPDzcG/HVGU4HkALEdR9L0JmYCIMkkc3EqDT6RIMilqATDaboNmusra3R7/eJ
      JxJ02g1OnlrCMx3GNBHHMNipPH5BzIPQbrf59re/TbVaRVEUXnjhBcrlMrOzswSDQRYWFhBF
      kVwudyinPGhmEgqFjnv4TzyHu0C9Xg/HGY718aPAMAyu11uDE8Q85E5ENKAyE48OZw7/kNoa
      pCDmYEyHDnCwxeS6LgI+vigjCXs/i9KtHY/7KYV816bWaKEGgkRC+l1/vx+Pa9Ac90QAACAA
      SURBVBek1+uxffG/RcB4aFsP2yj7SbUlyWFmvvbfPbCdJ2Ib9MDo9vY2Udmgq03Qb5QJyA4d
      S2ZmIsXmbh1FglQisZd2bPgEJZuOLTKRibFxc4XJE6dora+RzI/RbrRQRIeu4SAqOqrkI+PS
      9xRUv4+nRuk0yszPn7jnIHeLRXKf2wlpNKpoWgxdv+UwjWKRQD5PYP/x2XyeTqdDt9Mln7+V
      Bi0IAq3yOyNBzEMgKXFEUeSjjz5ic3OTubm94r9nz57lnXfewfM8xsfHaTQavPLKK8Ctb+1q
      tUomkxnIOAbhAKIoIori3TFAo7xDsdfCC7tM5zS2iibjOZnffHKV2UKCzWKTWrOL06mAGiUS
      DaLKMqKcJZ1KERANLt/comV00bUsgm/guB4KYPRsRPbUWd1ei1KzxFg2htVrsds0KIxl9wbh
      2Xz26UVcfDa3tlA1Bct0iMZCNGrrRIM+n13b5OyZJVrlBs/tO0mvVeOjrU3kUJwwfS62enR2
      rtEgxjdfee7OqY74ioyPjyPLMidOnGBlZQUAVVUpl8sUCgW63S6e5/FXf/VXdDqdw23en//8
      5wSDQS5fvswf//Efs7CwcMwzuUcQPLNwClVw6NpQ3C0zO5WmWGny3KkZtnbrLCzMI3o2/X6I
      tuGTyyQOl0eJVBo9HGI8nySWHSMajOA4t7IbHddFliTAp1n1mIwGSUQCqMEoheCtfl4IIoos
      oQWCuGYPNRRFEdoogTATeR3LdTh1KoiuKZghna2V6xg9m4AmoWpBopEgITWG2jcIjBVIqVFG
      DI6PPvqIYDDIxYsXWV5eJpVKoes6giBw7do1Ll26xNLSEq+99tqh1tw0TSYmJvA8D13XsSzr
      uKcBPGOpEJXVf4YoPPx2kO95A2m3+qTZEiWdiZM/ejA7Qx4D3OUA/X4fWXDx5DCafPBgC8+T
      bhOjH+D7PsXNm0ihFJlEBEEQaFZ36TgyE7kU/X4fVfSwxCC6snev8FwTy1UI3Kmqf4R0u12k
      /W3Eh+WLaoPeibSvYrsfI0HM0XksuUAbqzfw7S5ydonxqETPclm7eYNUYhzTdUiEJJp9n7Dq
      0ez7LMxOUixXmQwE+dUvP+Hl33qdar2JKyiQS7G5toJkt7CTS0wnZFp9l931K+jJWRzbIBfT
      KDVNEiGZasvk5NL85z5WHqbpomlHV3FZlrV/OORjWQ6qeuu5/+LSrx+7HuBPF17Ca/coFoss
      LS0hSRIrKyvMz89z8+ZNpqenH++ARtzGXQ4gqwE01WO3VkHp2ZS6EmNjOcyWSaPZwDB1ggK0
      hRARTcQTRQqTkxQrDQqFSQKKiGMZVOo1JqemkRWNkBpks1mlYjqsNwTmxvM02xaNahXXDaJ7
      PjUjTFxXcQBlvzaoHI7QKPdQZZNYZpzqziaVeo2xyWlkz8PyfRIRnWrLZLowhgBc+vQjJubP
      4FgtHAPiyQiVUoloKvv4r+4+wWCQYrHIiRMnOH/+PO12m2vXrpFOpw+/zT6fyx8MBtnd3SWR
      SCCKIidO3HuXbMTDc5cDTBSmkASPhONRqzU4M56kVKmSG0ujhEOkIhpt0yceCSIAEgKObVGY
      msbt1bEcn2wuTyInIwsC45MFFNEj7ECtUuGFU2lqlQoT+TjBoEomHqTetZmIhfftAa7Bletr
      5CZyyK7DtdUK480qgewpMrLKeD7C1SsVgprN5k6HEyfmD8efyOSolXaQFNhdXceZnWGzWCYr
      aHdO9bGh6zqJRIJgMIiiKBiGgWma5HI5LMui2WweirVLpRKapqGqKsViEUmSRg7wCBnOINj3
      2VpfQQzGCWsBqqVNwukxWuUiiVSKruWQiMTBs/A9i2K5jmkaKHoUxesRTU+iSh6iKGFbJuVS
      iXAyy99sfXYsS6CwIOM4Dp7nYds2n376KS+//DKffvopr776Kr3eXqUKQRAwTRNVVREE4dAB
      FhcXj/Raoxjg6Nw3CL568RN6rkoqFWVq4vGWFX+UdLtdWq6FeITU6i/DdT0k8d61Qe8kGQih
      iPd/zVEQfHQeSxBsWzaeIGMYT19/qrdubOEOoJKDe5BH8iWPC8gy//D5UanzYebuynAT02Sy
      Wba2t45jPLdh9Nq4aISCd6f8drvd27IhzX4bTwyiCA7dZodAJsWdq/7//MdvP1ZBTDYU5B8+
      v8R7771HuVzmhz/8IefOnWN7e5vTp0+zu7vL17/+9dueU6vVSCaT97E4YtDc5QCZ7N5uycT4
      MebQ+y7XrlxBUlV0LcRHH60xM5Wn1nGJyCZCKI0mWGytr5LIT5NJRLD6La6sLJPLZ6DVZcfs
      E8NhdavCKy+/fHxzYa9fwLlz5wB4+eWXsW2b8+fPk8vlcF2Xv/3bv6Xf7zM1NUUgEODXv/41
      sViMra0t3nzzTdLp9Je8woivynDqATyHnmET1TRa9RrteoNOLkFxZxd9LEG5WCIXleibFsn9
      QyYBEEWBTquFavt0222sfpue6eD7D18S/WFYWVlhdnaWarVKp9Nhenoa27bZ3NzkzJkzFAqF
      w94M9XqdQqGAbds0m03W19dHDvAIGc5dIG4FPIIg7OduC3j+rbjzoEZoo1Jku1QjnZ8gk4je
      FSAd5H33ej2+9c//NS17EE1AjlbrMh0M8N5//I8Oa1Lemc9+8KH/fID4+TTkwyYOR0xxHgXB
      R+euXaBut/vUC2IOauo8LMPYiWVYbQ26Q8ygbN3VIeYA27YRBR9fVJFFcBwbSVI4+BKybRtZ
      vvXzAZ5jUarU0IJhEtEwR+VW6sKjpdvtsvXZfz0SxDzBtnz276ADqcm6N6a77nHFnW3CkkFf
      n6RXL6MrLm1TYnYyzcZODVUVSMXjeI5Jo+8TkmzatkQhn6S8s8XE/BLrK8skxsZp1ZqokkOn
      7yCpOpoMku/Q9xQ0DDw1SrdZuacgxvNcisVd8rncYXn0RrOGHogT0OXDZVFte4fQxASB/bGn
      s7m9dkj7ghjfP7hs0Kq8PxLEjLiNuxygVa9Q6bexAzA9FmBzx2IyH+bc+WvMTSXY2GlSb/aw
      2xXEQAwjGkSVZERJIRaLIfs9VjeKtG2DUCCLbRl4novomrQNG1EQkCWHRvdAEBO/hyDG4uJn
      l/HwKRZ3UVQR2/KJxoLUqpvEdJ9LKzucPHmCbq3Fmf2qD/12kwvFHYRAlLBgcKnVo1O8QUuI
      8/rLZx7rhR3xZHDXEqjb7aIILj0bdnfL5DMxdiotCrkkm7s1xsayCK6NYfRp9b1DQUwoFKLT
      bqEHg6zeuL4viAnjOLcO1G6tK32a1TKOHCQe1olG7xCs+C5XL11GDITwzC5KKIbdbRGIJdA8
      D9O16fRNIrpGo9EhFA3Q79noAZme6RJPJAiqMn3DwOq38ZQIY5kEl99+c3QHGHEbQ7sLNGi6
      3S61tX8xEEGM5++3SR0AT7stHx/8wVRyGKStg/nd5QBba8s4cpjJfBpRlO4KdgGa1V0qHYfZ
      whiiKGL1O9zcqrAwP0O/3yMYDNBp9wlHbp3U9no9gsF7N3+oFDepdV3Gs0mCkQiPQibT7Xbp
      +xzbLlBUU/fyh+5glAt0dB5LLpAvaVjtBruijaKG0GSBfrdN31MRrSax3DQ7O0WCyTy/ef/v
      mV16Edlq0Ov2sIDyzhau4NPrQWF6HMfsUa1UcBARfZf82ARbW1tkMilKpQqzi6cxHAgLNqsb
      25w8vXToAI5j4R+5NqiFLyjIkoBjmgiadldt0MVjrA16/kf/PnORIKurq5w+fZpOp8PKygqF
      QoH19XWee+65UVOLY+AuB6iXNuh6oT35o+tQMQSqG1cJJCdJRANEgxqMT7C8vk02P0E0HKC0
      aWCbTarVJqKikU5FWb+xRXG3SLdRJZYeR7S71Kt1TNMlmY6xubnL7GyOTteh16oh6HEiyv7y
      xPfZ2byJ4XjogSj1VoPCfm3QeEjCPKwNaqJGs/u1QctcX2sxM5Wls1tHK2QJeR7FamtoaoN+
      /PHH1Ot1Jicn8TyPYrGIoiiUSiVKpRLtdptisYiu6+i6TiAQoFwuE4/HUVWV+fn5L3+REQ/E
      XQ6wdPZlBN/D9kBTJWKmx1Q2Ss8WiEWCCAKIkkhhapqwKmBYDrnxcQLRJOFwACmqo6oyc0sB
      mo0GkxMTdJsNgtkpQqEoqUyGaqXK2bOn9ro8IpEInURVVUzD3BuQa9AyJTJRhUq1Tq1UxBfA
      Mr68NujNw9qgN0kIJoavYA1JbdCDW7dpmmiahizvbecqioJt2zQajcPDumq1iqZpaJpGuVw+
      bIoxYrDc5QAHh1IHStpQEEDj81UoI7Ekkf3/H9SAywRur1OpBQJk9+v1hPS9R4X3Y4CxsVvF
      rvZu+ur+c/Y/zLfVBo2ALJNNR++oDZqm26x+rjZocq826OklPOOgNqjJTqUxNLVBl5aWuHDh
      ArIs0263kSSJaDRKuVwmn8/fthtm2/ZhR8vt7W0Cga/eOGPE/XmmdoGWmx2ELxCnHJW9IFjk
      QbpELqTiBJS7g8pREHx0Rh1iHhJBthHEh0+GE8Wj198JKipzsVE257Ay5A7gUKl0SKfjh78x
      DONwOdDtttGDkdvafjUaDeKxGO1uG9eBePzWsuLd7eXHrgkeC8WYDif41a9+heM4vPnmm7zz
      zjtEo1H6/T6CIPDaa7c6WDqOQ6vVGoliHhPD6QC+w8cffoCWzKL6EtcvfUJmcppuu0uv16Iw
      M0Wt2CCWiiFVK5i+xtz0OAKwcu0i0ew0Qc2nvlvDyGe5cfUq+dnjkyZKksRrr73GlStXgL1C
      sTdv3iQcDjM1NYVhGPz4xz8GYHp6mnA4zFtvvcXU1BSXLl3iT//0T0e9AB4Rj68024PguTTb
      XcAHz6LVNvDsHpYLmVQKT/BIpMcQXJN+vw/4eK6Lu79GNE2TXr+P5zk0G/V9UcyxzohLly5x
      5swZKpUKExMTpNNp8vk8169fx3VdTp06xenTp7Esi1arxenTpxFFkUqlMmp7+gh5KoJgx+xy
      Y2UdWY8wPz15z9PrbrfLj9cv4Q5kCXQ0QQxANhjh96ZO3vfvoyD46IwEMQ/BSBBzPLaeOEFM
      p9MhqGs4noSqPMAL+T7l3R3UcJywJmJ5Er1WlZ7lkU6l0RQRxwf1mHridrtdNs7/Fwj+AAQx
      +AMRZTwbtvz9++VgbO1xNFvB+GkKZ/6re/7tvtugK5c/JTUxjutHsPpNsrksvmMiKjqW0aLR
      ccgldEpNg2wiRHm3zE6tyddfep5mx8CsrxMPa3Qtgcm8ztaOiWtvE9dV2mKAQuZouxuObbFT
      LJHPZRAkBd+1abYaBPU4WkDGcVwURaK0vklsZhod2NnaJJHOYpoG3U6XXC4Lvofn712wTu2T
      UTr0M4QgSniex69+9St6vd5eyn6nw+///u/z/vvvU6vV7naAZH6SWnGDjiEjyBKO4+K4BoYt
      kEqEwTRZ22mj+wJrZpf5wjSKXkESBRq1MunxKbY3V+g5EifmzhAKCjhGmZ1Wg2B+6mgj9yyu
      XrmG77tUqjUU2cdxRaKRAMvL28SDPtfWS5w4MYfZ7BCb2auwbPY6XL9awZVDRMQ+V9p9ursr
      dKQ4r714aqAXd8STgSiKpNNpisUimUwG0zQRBIFsNks2m72HA6TSxMI6rqhR3CkyMz1Ox3Dw
      XYdmtYioJ5iOquw2TWYyCTRNwbFMXF/k9Nnn0QMqqUQMBRfHC5DNKUhSGE2WMI9anUSQUCQQ
      AjFUo4MSjmN3m0hamJnJIKZrMzcXJBxQsQ2V7ZXr9Hs2QV1BkAOkk1GCSoq+0ScoTZKUj65R
      HvF04TgOu7u7aJpGsVgkGAxSKpW4dOkSmUzm6dgFOgrdbpf65l8iCQ8f6A9jC9FhteX7e1GA
      OAhBzAO2SVWDE6Qm//Cef7tvcdynlW63iysKSAMpjvtodlsUUUKVvvomwWgb9Og8IblAHv2+
      ja4fvba/aRpoWgDwMQ0bLXCr5MpfXv3wsadCPAiv5qZ5NTfN+vo6hUKBCxcusLi4SCAQ4Pz5
      88zMzNBqtRgbG3ssvZWfBYbzKvo+Oxs3kSMRWtU+smgQS49R2dmi2qgxMTWLb1q4AsQjOvWu
      w8xhh5iPGZs9hWu1cS2faCJGtbRLNJX70pcdBmzbZmVlBVVVcRyHc+fO8corr7C6unrYSCMe
      j2PbNufOnUNRFGZmZuj3+2xsbLC0tMTGxgZvvPHGwOr6PM0MpwO4fa4srzM+NYZo21zbKFPo
      NtAyJ8mpGmP5CMvX6miKwU6pf1uHmFR2jGa1hKRAaW2DvFNga7eKK91bjzxsqKpKOp3G931U
      VaXX6x1qAxzHYWpqbyetWq0yMTGBYRhsbm7S6/WYm5tjZWWFer2OZVlo2vF1xXlSGE4HkHRO
      LU6DFiOiBwgENELJPO1KkUQ6RXG3Q2EqC74Nns362hqG0UfRo2hY5CYKKKLLxNjUXlkWH4LR
      ELSOe2JfjmEYbG1toWkahmHw4osvYlkWqVSK2dlZPv30U3q93qE67KDrjOu66LpOKBRibW3t
      sVTbexp4poJgA29AQbC3L4h5eD4fBAckhYB89I6YdzIKgo/OExIED5a/PH8NewDu7nk+ojiY
      9fXBduN/9OrzD/XhH/HVGGoH6HebOASIhO5ey3Y6HcLhWwdcZq+FK4ZQBZt2o42ey3Cniva/
      +dm7x1YW5cv4Ry+colLcodVqEQwGuXr1Kt/73vcQRZGf/vSnLC4u8vHHH/Ptb3+bVCp1+Lxy
      uUw6nR4FvF+R4XQAz+HK5csogQC6GuTXf3+FxRNTVDouUclAiuYJiBaba6ukxmf2OsQYba6s
      rJDOJJG6fTZ7XeJYXLm5y29/643jntGRmJqa4uOPP6ZSqbC4uEi1WqXdbtPpdJibm6NcLpNM
      Jnn77bcP+wiPj49z4cIF+v0+vV6Ps2fPcvLk/dOvR9zOcApifA/TdhAEgXaziSwIWAg0qiUk
      RWG3VME0+li2jes6GIaB6/rs7f0bOB74jkWr3UUPBgeUH/nouXHjBh988AG9Xo9z585hmibN
      ZpPNzU02NjaIRCIIgkAqleL06dOMjY3RbrdJpVIUCgUCgQDLy8vHPY0niic+CG7Vy5SqTeKp
      HOlE5L6P63a7/PBf/ju6zsOL4v19PcxAEnx9EAT46Z//eySDD1f6ZBQEH52RIOYhGEbhybDa
      euIEMa1Wi1AogONJaMoDXADfZ2drHS2aIqSpaNpw7UN3u13WPv4Rgt9/eGP+QbOyAdwDDm4B
      g2Bgtvx91eeQ2Tr4qA7K1r06xKxdu0g8n8cToli9xp4gxjYQFB3LaNPo2uTjOrtNk1wiSLlU
      YafW5LWXX6DvQH1rnUgoQigcJKAo9BwPwbYJJ2I4jk/oiHk9ptE/FMSIsobnmDTbLcLBPUGM
      adkEVJmdm+ukTsyjA1sb68RSGRzbOhTE+J6Luy+I6TUujQQxI27jLgdI5Cao727QMUqg7NWu
      tB0DwxJIJyOIlsH6bhfdF9hw+swXZlCCZSRRoFYqkp2cprh8mfGl51hdvoGmC2RyE1z45DMW
      zj5/tFF5FsvLq+A7XG11kEUbx1eJRVRWV3dIBH1WtqrMzE3jdvocbAraZp/11etYgk5E7HO1
      Y9ItrdCXE7wy6tg+4h7c5QCpVJpENIwrquxsbzM9PUHPdPEdh0Z1BymUZCaqUmoYzGQSqJqM
      Z1u4vsTp514gqGtk4jFsx0afn0ESfHRdZzcUIaIf8aBHkFBEHyEQQzE6KJEsdqeBqIaYnwph
      ODZTcpBIQKPetw8FMaGgii9oZFMxdCWNYfQJyZM40qimzoh788TvAh2VbrdLc/vfIIoDEsQI
      4kBCgGEUseDvd1AZkC3f9xEGcHL+oIKYL+LgWj1TDlDsmQgD2wV6sOK497flIH1FEYwowEwi
      dvjzaBv06DwRuUC2ZeILMuo9dqPu7D3r2ObtHWICgbsm9+r/+i+HNhXiqxALqNT+yX9KvV7H
      dV1isRirq6vMzs5Sq9XY2dkhnU5TqVQ4ffr0bddrkH2An2SG0wF8n821FSzPR9ej1BsNxnNJ
      yo0eMV3AFoP4Tg9si0A8Rzoept+ucG2tTmEyS7/cRJlIE/Z9itUm87Mzxz2jR8pBukS5XObC
      hQvMzs5y4cIFNE3j2rVrCILA1NQUFy5coNfrkc1mcV33sFFHt9tlcXGRTCZz3FN57AxnKoRr
      0LElYiGNVr1OdWeL7WqdVrNBp9un0WxidFt0HZFYaP/0VBCZGM+wtbmDbZssr2xwc/k6tUYD
      2zlqOYonk1QqheM4XLx4kY2NDSzLAvaWaq+88gq2bSOKIqqqEg6HsW2bVquFKIo4jkOj0WB7
      e/uYZ3E8DOcdQNZJRxU8JcT0dAJF18mkIlQDBjFdICToRIIKvVadjY11er0eiWSKfr/H6TMn
      cS2HSUXCsUyKQ9Qh5lGxurpKo9Hgj/7oj+j1erTbbZ5//nl2d3cBeOmllwgGgywuLh4+52AN
      fHCyOj09fVzDP1aeqSC4atqIT1EqhCgIjEdvpYSPguCj80QEwYOmZDZgENtx3mC29R7E1svZ
      qVHQ+ggYcgewKe22yeZu1RP9fMPtbqeNHrq9Q0ytViOZSNDutrEtn2Ty1jbhud21oS6L8kW8
      nJ3ixo0bOI6D53msra3x3e9+l+vXr7O5ucnExATr6+u8+eabh831YE8w8ywGt0dlOB3Ac/j1
      3/0CPTtBWNb+//bO5LmNa7vDX8+NxjyDM0VqoCXl6SmRd/Yim+yz8S7b7PIX5S/I0lWpcqVS
      eeVKXJVKRcp7smxSlkRRIEBiHgig0UCPWZCmRZHKowgqhER8GxIkeHi7G+fee+49v3v46Y//
      SWH1JuORw8g6rBDT2GuTyMSRGjUc0TiuEPPm1RbNzBKGFtCsNBiPCjx7+iPLGw+u+qomZm1t
      jWfPnnHnzh16vUOFf6fTOfEV4LvvvqPT6ZDP50mn0zx+/BhRFKnVanz99dfcuHHjSto/jUyn
      AwQ+gqoTjRiItoOiRzE0EcuCfDaLLwTk5pYI3C624xHILoN+H1GSEUUR3/NxXA8jpNMfmBjR
      BLo6nZf6IWxubvLkyRO2t7cJh8PHCrFyuUw6naZUKjEcDllcXGRxcRE4jH2WlpYIggDbtikW
      izMHeIvPIgj2nBF7+zUkzWA+n31vhZh/3XuBfxm7+5eawXy+Dam/Xf/9n33fLAg+PzNBzARM
      yyrQp2DrkxPEdJs1RoFKIZs89UfOeISo6kgCDC2LwHNQ9TCe56K/5xQydzyk1R+Rz1xt2U/T
      NHnz+O8RguHEts5fIWxm68Nquvz/2hJ4NwYIfHZL+xSWVqiUdvDVKBFdI/BsNjd/Yi6Xp2sH
      3P1ig1q1ijvsoscT+EIEq99GDhxGcoSUFqCEE4wGXRqVCkZ2Dsuy0EQXVzSQ3QEjT2K/XOTe
      7x+RiIRONdAy++xVm8zn04hqCN+26A4GxMKHgpihZRMJqey+2qHwxR1CQLm4QySZJfAcTHNI
      Pp/F91zco3mP1d+eCWJmnOCdSZ7AyuoyxVIJVY+AWcWSIjiOxcLSKlEFkgrUTdCFgH44yd6b
      fdZuL7PX3CeSWGZ5McmfHv8Pc3MFBD3K8sIyih7QlRMc1MoIWKghHUkSWFxc/i2V4W38MW92
      9xECm1fFMXIwwhNCxCMyz95USYUFdmsdFpeXEOzftnhd16W+9wYz0IgJFi9MG7Oxg62meHjv
      1ke+lTM+RU5FOZbZJze/guwOCLQcrtlGTBZQ/CG+HCEW1dAE0PQCIVskG48TNVQKC6sUcnka
      7Q5f3LoBeoxYNILkewiSgC5pDN0YYyFEPKIBAlavQ88cE4+84wSCgiJ4CKEE8qiPEi3gDtoI
      apzbN8JYjsO8HCIW0uiMHCqvXzIcOoTDGg4qc9kkmpxlPB4RVZawxdMjzIwZ8JmsAp0H0zTp
      1/4ZUZj8WJSpFLFMsa3LSr3+GIKYEyNAEPgc9AYMB33SyQS+ohNSJLrdLpIkEYlGzxWAHLRq
      VFoDlpcXCGn6iSXDX4/6vgpaob+Gy1iO8zxEUbqUaMxzvQ86sFeXJNbTiTN/N1sGPT9n5gIJ
      CHTaTaxOje7QJpcweF5tEw6phFSZvmmiygr9fo9YLEq3WUWJpAiHDAgCEokoCCKdThtRDtNt
      t2i7Y5o9m+VslL32kPFBnfnlZVrdMUlDYOir3F5bOrORjj3CR0Y7YxPr3R7KdUb4gooiCTiW
      hWAYvOtmX//jP33ygph7uTRP/+Hv2N/fJxqNUiwWURSFjY0Nnj9/DkChUCAIghMpEJf5Qfyc
      OPnJEgTEcY9Qfp3KbhEjCLG9s8vd27cYuz2cUQTNr2I6MnagUi+XkOIucdmhsP4XDLotAi1O
      PJFir1ym5cSJh3UySZVGvcrL3TZ/ubGKKnmksgvUXz+maoqnHSAI2N15hYtASI/RPugwn0vR
      7FrE9ABXjoA7xBuPMFJzR4KYFi/etFlczDFq9pDm00SPBDE31z6/nc/hcIht20QiEba2ttjY
      2CAcDvPzzz+TSCTo9Xqk02m+//7748Iatm3TarXIZrPUajUePXpEPB7/8//sM+ZU17qwfg9B
      kljIJhAFyCysoWsqgiAQBD6Bv4AgiRAILOXjSIpKebdEMqIhCodliBwVVm/F0DXleL7mZzIs
      roOmCLgeJFWVTOSv2BDOGGa9EaYrkYkptFtt6vtlBFmgf2AixkOYnoMhjnHRyRuH+w+CIJLP
      p6ns14gIIqU3ZaLekIErs7L8+eW6G4ZBt9vFMAxc18VxHHzfx/d9DMOgUqngeR6pVArXdRkM
      BliWRTweZzgcUq/XaTQaMwc49YOj+bl0VGEkorx9wtvJ4VM+qr+7/laJIgBF1VHeORhOkqTj
      Kcmvx+BLofeULZJDFFIGgWywupbCiMVIJsN0I2OimkBc0ImEZKxBj+p+mf7AJJnO4Lkud+9t
      4NseS4qIZ9s0Oj1UWcT6zAQxv5ZBkmWZBw8eMBgM8DyP+/fv02w2j6eIzdpolQAABIhJREFU
      t24dLv++PQXyfR9N01hYWLjiq7h6Tq0CbT59gu3L3Ll/HynwEOwe//XsFRt3HxBTXba29/jd
      /Q2KL7cYuCKJWJRMJoM+ZUchvotpmphegHgZFWLcozSBKwiCZUEgETr7EN1ZEHx+3iuIiaXz
      JFSXza1fSGey5KMSiijiOmPUeIJ04rDXz2SzHOxWadZraLox9Q4AsNOvX4ogxg8up/Dz/2VL
      lWQe5s5eHJhxeZxyANs8oDjQWF8qEEmkGB80CYV0HNdjNOhSqVQIRZMEloUoSRRyKYb2x5pf
      OFSrPQqF3yqimKZJOHx40ttZgphWq0U6laJv9rDHAem3lgz/1Ch9MoKYsKLyMLfE06dPSSQS
      9Pt9DMNgbW3tOCV6ZWWF8XjMV199daJXnIlgzs8pB1i7c+/kGxIZfpfIHL/+8ssvD7+Jh8nM
      faRW+Q7//od/w8gvktBC/Mt//wfza7dxbZ/RqMfS6hL1cptEOo5IFU8KHwtiitvPaXYXCWkB
      zb0649Ecf3zyhBv3Hn2kxn5cbt68yd7eHuvr6xSLRQAePnyI4zhYlnUc+H777bcMBgNWV1cx
      DIMffviBWCzG1tYW33zzDblc7oqvZDqZUpVIgBFLkk0lCEY2sVSeRFSn3hpSyOXwBSgsrBwJ
      YgICz6HTbiPKR+nOweF8MRGPYg4tMoUFIiEN+ld9XR/Ojz/+SLFYpNvt8vLlS1KpFJZlsb6+
      TqVS4cWLF7iuy8bGBq7rIooig8Hg+HW326VUKs0c4D18FqkQvjOm1mwhKTrZdOq9gpg/VF7h
      T92R/menCYRkhb9ZuftBtmZB8PmZCWImYFpzbqbR1mULYmB2OO6FME0TVVUvJQ/J87zDm3cJ
      D2JaVVyX1WtP6wjw672a0hhgurnMfJpptCUIwlTauqzRDX67V9N5NuhHYjzsUSxXmWjMC3x2
      Xv5CtXUwUVt8z6HeaOG7Ntuv3+BN0CjPGdNodXCGPX76aZOxe3Fb7cY+5WqTg1aNarN7YTsE
      Ac1qmUqjQ22vyE6pMoEtn9LOKxqdPs1qiXbv4rJW1x7yy/NfGI1HbG1uXi8H2Ks0wDEZT1Aq
      NXAsOkOHRHSyqjP22MYcmuyXyyTDMpXOxR+qbTuY5oBOvYKeyqFO0OEqWphhv0ujM6DfaVzc
      EKAZUQYHbRrNNqnkZDlHuhGmUd2lO4RWbe/ihgQRXRUobb/GVULXywEgwPF8hAlyGHxBJp+K
      8Wp7Z6KWqJpG4DkEQcDYdibaWVY1Hd+1UWNphM4u1f7FFzNajRr5ufmj4oITDZU06jUKc3Nk
      sjleT1DA+3ClTMT3PXzPxZ+gWb7nIysKnqwSl73rFQMsL85xYPmoysX9XpQVBAJuTJhiPRoO
      8P2A+Nw8/e4Bc4mLyzYts4fvBwiyihwrUIhe/LGqqkqn02Uun8HmfBU932tLUeh0e0RUkeXV
      Ce6XIGCPRyws3URw+oj62YKgc5rCdgVurC5Tq1Rmq0AzrjfXbAo0Y8ZJZg4w41ozc4AZ15qZ
      A8y41swcYMa1ZuYAM641MweYca35X1epUlADc1mSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Biketype_Start' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZl0lEQVR4nO3dyW8eeX7f8XctTz37ymfhLrEl9TJS9/Rue8Yet23YsBM4CBxgcjByyC1/
      QQIkQDC3HHJIDjnlZvsQIMjNSQAjSQ+MGLE9M72qpdZCcScfPnzWepbalxwkcVpDiqJarIct
      1u8FEKKeKv5+v6fIz1Prt0oKwzBEEGJKPu8BCMJ5EgEQYk0EQPjO2d9Z57ObXzPQdb65fT7R
      dTzgYHeTT768ja7rh9N0XWei93GCJ9u68/kndLst9nXr2L4ksQ8gfNfcv/U5HUtmZ/Umb735
      Jn/z2T3eWCrR2+ux8pu/TWq0T2scsr/2NW++dYOf/vw21WTA5cWrDFWJnAb9/Sbzr7yF3lrD
      HbXxK1d5sPqAN6/U0YcG+WyGmze/EgEQvnv2Nh9wa32PWk5jYruMLZ/FuRmqmkIvWaEUGtxc
      3aZRTDGxHAamy2I5i2/LDFWJrAaZRBJJSRN6Fu5wjx0jiSwFLM3VkMMAzxhxMPRePABhGCJJ
      0lm9d0GYqhfeBwiC4NkzCcJ3lNgJFmJNBECINREAIdZEAIRYEwEQYk0EQIg1EQAh1tSzbvB+
      p8+ffXb7rJs9lFZV/s3v/Fpk7QvxcuYBWOvp/Lu//tlZN3uolEqKAAhnRmwCCbEmAiDEmgiA
      EGsiAEKsnW4nOAzZXF+nWC7Q6k2Yq1VwXYeZmZmIhycI0TpVAOyJzkF7AJpK6Hu09jZR0hXK
      5YAgCPhmSYEf+JEN9jHP8yLvQ4iHUwUgQEJLSCiyiucazMzN41oWkiwjhyGKohzOq8jKCS2d
      DVU986O3Qkyd6i8pnSvy/XffAWBxfj7SAQnCNImdYCHWRACEWLuQG9N/+l//J2s9/dkzfkv/
      +rc/5I/fuBJZ+8L0XMgA3NzvcOugG1n7bcOMrG1husQmkBBrIgBCrIkACLEmAiDEmgiAEGsi
      AEKsiQAIsSYCIMSaCIAQayIAQqyduiJsY22NcrVE82DIfGMGx3WozlQjHp4gROtUAbDGA1oH
      fbxEgkpKZWdvi1S6QuU7WhEWEu1Tn4IgEFVpF8Tp1gCySi6rockSByOL+cYCtv3drQiTiPaR
      TbIsi6q0C+JUv8VUNs/1t96KeiyCMHViJ1iINREAIdZEAIRYEwEQYk0EQIg1EQAh1kQAhFgT
      ARBiTQRAiDURACHWRACEWBMBEGJNBECINREAIdZOdTm0Z024d/8earpMKElUChls22ZxcTHq
      8QlCpE4VAFlLkVAlZEVhpA/oumMSqSJBICrChJfb6dYAtkmoZCgV0oRhyFxjBs/zREWY8NI7
      1W9RS+d49dVXARBPRhUuErETLMSaCIAQayIAQqyJAAixJgIgxJoIgBBrIgBCrIkACLEmAiDE
      mgiAEGvigpYI/O3WHn/+2deRtT+Xz/Bvf/c3Ims/TkQAInC30+c///zLyNp/vVYRATgjYhNI
      iLUjAVhdXT2PcQjCuTiyCfTxxx8DcPXq1cPXPGvC3Xt3SWQrGIbBXKOKY9ssLS1Nb6SCEIFj
      9wE+/vhj9vb2+NGPfgSAnEiRTMhMbI96IUe31yYpKsJOnB6pMBQVaWfkSAB+/OMfH5nJcyxC
      NctKvUZXH3N5eQXXdUVF2AnTIyVJoiLtjBxZiqVSiUFnj7YeUCiVkAEtneXatWsAFIrFaY9R
      ECJz7EfV9uY9/s9//ynOtEcjCFN27Hq03ljmxq8XSE57NIIwZcevAbZ26Gyscm+nNe3xCMJU
      HbsGWFpaYmB6VHLZaY9HEKbqyBrAHI6wAp8rr75BYBvnMSZBmJojAdi/9zWrzQ6t3T0qjfp5
      jEkQpubIJlDj2mssFoskzmM0wpnZHY4JwuhOCFYzadKJl/9cxJF3kCkWuf3F33D3jsEf/dM/
      IHUeoxJe2Dv/6S/oGlZk7f/lP/vH/IPXViJrf1qObAIFgU+hVCNZTKKdx4gEYYqOrAHssc7a
      2haG6REgrpcWLrYjAVC1FIZhoXoB7nEzvIBfX5qjkNQIgc7E5Garw48uL2C4HpdKBXqmxcRx
      udfp0zHMM+xZEI539ANegoX5BoGqnXm5mCJJaIpCe2KwWMwRhCF90+KzvQPudfrc7/QppZL8
      5uWFM+5ZEI535G88kcwgKTBsdTjri3q39RFD2yEIQ/5+u0k1k6acTlFKJ1nv64wdl6HtsFjM
      nXHPgnC8Yz/k5cAmm68eXlUfhiFDfUg2m0Yfm5QKOYIgIJF4voOlW/oI9NETr3289uTJtp5p
      0TOjOXpRTGn83ivLfLJ3wA+W5/gvX97lh5fmSSoKIdA1TK5WSny532G1N4hkDMJ3y5EAOJaB
      7UpMAvNwou+Y9Dq7rG9J5It5xnoXH5WVS0uEYfhEAUiUx54P+/iWBSeKJIMEHy7OUs9lyCRU
      FEkmpapktQSEMLQdbsxW8YKAjcHw2HZ+9T0fNz1aJ/f/aJZoRxAG0Rf+TMGRAEiSRKczpJJR
      D3eCA9dm7GksNHKsbexQrVcIw5fvzY9sh+Zowpf7HVKqQkJR2NaHpFQVLwgwPY+x7VLPZU7e
      CY8+48KUHHMUSOPtt99mpz04vBxaSWaZq/rkcjle/16ObDr18FNOkpAk6YkKKFmKthoLvn3F
      lRsE/O1WE4CJ4wKgW/aR+QbHvPZNkiydOAYp8mVwcv+PZol2BJIcfeXbFBwJgKV3uHnnHpqa
      wQWSgJLQqFarAKTEqWHhFP7H3TX+21f3I2v/jVqFf/mjD164nSMB6O40cSWLrQd9fu23Xrh9
      IaZu7nf4889uR9b+RytL0QSgsvQK7y+9wsxHhRduXBC+647uBIc2H/+vv2amOsdv/c4PxVWh
      wkvpVqvDv/+/v3jmfEcCkC7VeO2VJXabgzM/ESYI09IcTfiLz599g+JjT4TNz89hhinx6S9c
      eEeOY4VhQF83qecfHgUShIvsmAO5Aev373B7fZvo7/EmCOfrmDPBKsVSgTBRECc8hQvv2FN5
      s40a+60DEQDhwjs2AOlcgaQiiwAIF96xAZiMRiTSabEPIFx4R48CBR5eEBL44iyAcPEdCUB7
      9TaJ2SvUCxnEIxiEi+7IUaDa1Tf44tPPUMvVw3sCebbB6vo6uVwZfWIw36jiOA6NurhznPBy
      O3oYVE7w9vsfPvGakkiSz+YxXY9aJklzf4dkqkxNPCLpqdMjdZpHJEV8BCMI/BPHMI2quJP6
      90/5OzjVjR/sUZ/uyKBeKdIdmszPLeHYtnhE0gnTI3WaRyRFXBAjy8qJY5hGUdBJ/Sun/B2c
      KgCpYpW3ig8LYmZnT9WuILwUXv6aNkF4ASIAQqyJAAix9vLf4P0l89HKIpIk0X9086/Pm23+
      yfVrbPR15go5PD9g7Dh8sd9hZIvndEZNrAGmTJIkMgmVN2erzOayXC4XmMtnmS/k2OwPaY0n
      lNMpfrg8f95DjQWxBpiyjf4QRZZY6+mUUkkc3+fPPruNIkksl/LcafdZ7w+pZzPnPdRYEAGY
      svW+fvj9r94DdbD/8IZcpuc98+ZcwtkQm0BCrIkACLEmAiDEmgiAEGtiJzhmZjIp3ptvsDkY
      sljM89O1bd5faDB2XGYf3RY+p2lsDYbsDMfnPdzIiTVAzKRVlXxSw3Q9Mgn18KLRqzMlVFkm
      nVAppZK8O1+nlEqe2NZFINYAMWO4HrplU0wlGdnO4b9D26GSTtEaG2wNRqyUi/hTeNrPeTtV
      AHzHYn2vzUw2wcHQpl4pPKwIazSiHp9wxnqmxf9+sHXktV/VHE2mNaRzdaoAKFqKbDKBHwZ4
      tsVBa4QqKsJOnB4pURHGVCvCPHvCwcEB9XoVWVFozM7hOqIi7KTpkRIVYUy1IkxNZvn+998C
      YG7uVO0KwlP9xtIcpueR0zSaozE90+L9hVmaozGFZBJFkugYJg96Oo4f7RaFOAokTF0+qZFP
      aowdh6SqklQUFFkioSi8UiniBgGv1ypcr89EPhZxFEiYuoFl4/oBhaRGczRBlWVcP2Bg2tzt
      9Lnf6XMwMcg+54PYvw0RAGHqfrazf+S1xyfdHl8tO62rYUUAhNj54fI8xVSSIAzFPoAQT6r8
      8CiVWAMIsbPW1+mZFn4YigAI8dMcTQ7PdItNICHWRACEWBMBEGJNBECINREAIdZEAIRYEwEQ
      Yu3UFWF313eYyWnstofMzlZxLJvLly9FPT5BiNSpK8LKhRyOa1Mv5tD1LolkkUBUhD11eqRE
      RRhTrwjT9QGzs7OMDJuVuVk8zxMVYSdMj5SoCGPqFWGvv/46AKXSqdoVhJeC2AkWYk0EQIg1
      EQAh1kQAhFgTARBiTQRAiDURACHWRACEWBMBEGLtQhbF//MbAa1hdNfjvFm9+PfNj4sLGYDZ
      hetoM0Zk7Wdz1cjaFqZLbAIJsSYCIMSaCIAQa8+1D9Dc3mDoSBQyGpZls7Jy+cg8OdXhevbg
      bEZ3jEIqHVnbQvw8VwCSqSR6c4/QS6E+pSJsoVLiX/zh7575QA/HoCSeXREWeTXUyRVhH+S3
      +Y+v/VVk/ZcLS3jen548k6gIO1UrzxWAbDbH7Pw89WoF3z++IkySVUJZe55mn0soq8+uCIu8
      GurkirBU6TLla/8osv6L6bKoCJtmRdhjyUye5Uz+8f+e50djxVFK6OnrkbUvJzPPnOc//H4G
      242uPPXNevSlr9NwIc8DCGClr2JpzyicfwG+kj1x+mslhz+5PIys/xuzZ/McYxEAIRLLs8t8
      9MFHkbW/kDub4vRYBcB3Pe7+/FNe/eBdfvaXf8UP/uQfcufvfoEkSaRyWQatNrZhsnz9NWZX
      xD2P4iBW5wGUhEq5UWdvdQ3XtrFNk+riPMNuDzWR4NUP3qHUqLF3f52DzZ3zHq4wBVNdA/Rb
      bWRZYtzXSWUzVOZmWf/yFvVLi+yvbZIrF9HSaVLZDJlC/tkNPifPcRj3B8xeuUztj/8A3/OR
      JIlXP3yXfvOAcX/A8vdeYzLQyc9Uzrx/4btnqgHIV8p0dnYJwxBjOCKVzdDfP8Acj1FUlYk+
      4mBzh1y5xCtv3zjz/lVN49r7bz/xWiafA6BY/eVDmVPZZx9l+bb217dIZTM4pkngB+Rnymzc
      vE1+psK4NyCZTpHMZqguzJHKnbyj+W2EYciw2yOZTnGwtcvS69cYtNpo6RTGcEy+UsLQh2TL
      JZLp1Jn3Py2Xi/CvPnz2uYipBqDX3Ke9tUs6lyWZyRCGIZlCjlQ2izmeUFteIJ3P0t+P7kzy
      eSs3agw7PVY//ZJyo06mkMcxLUbdPrWleUa9Pt3dJtbE4Oq7b515/67tMNg/IASUR8fRt7++
      h+/7lBs1tm7dQZIk8jNlrrzzJrJy9oc7mw82qMw12F/bZGZxDkVV2bp1hyvvvsXe/TXCMKRY
      myFXKqJq3+6cUjJVYOHSe8+cb6oBqC8vUl9efOK1N37w4RP/L8xUmL/6yjSHNVXdvX2s8YT3
      /+j3mAyGBEFAppCnMtdA7/RYfP0q5nDMqDeIpP8wCDjY2mHxtWvs3V+j3KhRW15k2Oky7Pap
      X15C1RLs3Fll2O1Tqp/9pd+5chFzNGZ/fZN8tUy5XiOdz9Na38IYjpFliY39A2ZXLjH7SrQH
      I2J1FOi7YP7qyuH32uzDTYzHf2S1Rx8OqUyG8mw9kv61dIp3fv8jZFmhfnkJWZLIFPLMrlwi
      DAOkR2dQG5eWDr8/a53tPZAevm9DH2GOxox7ffLVCqNenzd+8AG9vX2sSTQ1HY5l4bkege+L
      AMSNJEmoicSTrx3++41LWiLY9Hls5ftHz5IvXLsCwNLr1wDIlYqR9W+bFpO+jqwo8ToMKggA
      9sSgubbBeDB4vjWAMeqz0x4yX5/BdV3K5XJUYxSEyFTmZynPNpCk5zwR1tPHFFWZrZ0N+kMz
      qvEJQqRkWUZRleffBMpoCq2RQb02h6ZE/RwWQYjec20CVerzVL5xcOJxQcw3JSSZRip3JoM7
      TkJR8P2TH8M0o2VIRLh7k5LVE8eQlJVIl0FeSz1zGdRSORw/uqtBE5J84hgyihrpMiglTl4G
      qiSdqn8pfIHSnTAMCYIg+kcCnWIc0RdgPN15L4Pzfv9w/svg2/b/QiOWJAlZlpEk6egX0N7f
      ZWI5x0+XJCBkZ3sLL3jYlj0ZsbnThDBgPDFo7W2zsb2L67rYtv2UNjj83nddgjDAcV0kScJ9
      9O/D8QS4j679+ebXWO+xurqG7QVPHec3v44bx68ug06rydg8+r59zyUIJQh9bNdjMpngOE9f
      Pt1OmyB89pi+uRw81yX0XZxH7+eJZRB4uH545GcH3QNWH6zjh0enPc8y6Hdax75v13VxbBt4
      /PMWtu0c/l5s22N8zLJ4YuzP+Hra3+F4NALfwTnmfUuS9OLnAZ72yWPpLXQrJBgPae2OSKgh
      iWSabDaPaRgYjsdCWeOgb2DrN1EaC6R8h4Jssra9h+0EXFnMEwwk7t2+helLfPDe20f6+Wb/
      w4Mmu8MhmpYh9H1URQI5SS4JfihheSGVQpbe0CCl+PhKmqW5OonBEFPv0HFDPNNEUSTGhkWh
      XCKwXSaTMfXZOr3BhIQScOnS5acvg9Bld6/Fkpbi3tY6pUqVVEpldfU+M6UCfUvm+qsr7G+t
      0zU8GpU8vm3jBQGukiQr+WiZDBPT5mC/xfxkjJJIYnshSmAiKSr7LZ333nsbRT7af2dvm57e
      JVFcJHRNFFyUZJ5EaKPKIcMgRy2voE8cZM9AzZSZq9fRxxsMDpp4SoLxwCCZCBibDpVaCXNg
      Yzgmc3M1BiMLOXSPLgNvQt+AOl0+We1RLxUolssgJ9ld/5qh6XHl0jxOmMCx+khhlkuX5wGZ
      g717tHSYq+VwLYNMoYLt+kx6+xTri0hWj+7YpzHbYL/VQXJGzDTmGQzHVIpZxqbPlZWlY/8O
      ++09eoGPnaqj+Ba1cgHDNEngs98fR3ciTEloGOMuhA65bIFOe5dkRqK5u0cyAXu6x1L9TVKy
      TagkkUIIHAtdSuFOekzGFs5CAQmJmfocjmM9s09Z0Vi58grrt+/iqQpyqAIOrukThhJDw2LS
      h72OyfUb10jwy0/99ft3sBJ5lmcXURSfkpaE0GE8NqmUZ2jubXL//j7X3/0ejjlCNwNqleNO
      1sgUCxm2tzaRQ9jZ3sH1HYrlErKiUq/msF2J0WhIrVjA8WUe3LtNZe4ahZzDF7dus3h5hatv
      3CCT1PACH8ccM5p4zNQrKPhkUolj+n1ITaZZWbnE3Y0uYeCS1FQCZ4zkT0hIIW1zxPjAZGDJ
      vHZ1GSn45afu/Tu30GbqNMrLKIpNKZkmcA2GA4v5+Qo7zW02NrrcuH4FYzTAClQqxdzjXzjG
      oI3uauQKeSQtw4N7d7nxznuUKnWyrsXu1jo9O8HK4sNiloPmLqX6PL3uiMbsDEEQcufObWqN
      KwxtizeuLEHg4oy7VGZfZWe3y8QYcqlRQtcH+OaEQSpHIfX0P+NEpojR3qDZNpiYFiwUmbhQ
      TKUwXPvF9gFOFH67o0SSJD31jgLP2s79Nm/lpP5O+pkTBnFGR8cebiKeNP24YZznMniijdCj
      edBnbrb+1Nt0PG7jtH2b4wFbrQGvXbl8qvGc1LZnjvG0XIQBEISXgPKTn/zkJ+c9iDPhWXzy
      +ZeYlo3vuSQ0DWM8Qp+YeJZBCHz26af4rsdOu0s5m+Dv/+5nFOuL9NotsId0TBlNDrAmQ+6t
      b+PbBrKi0O4OkHyLwciCYMztL+/SarcpVBskHm2Hd/a2abVa9IYTJpMJY8Oi321jGhMIwfNc
      fD9gOOhi2B6qKuN5AaqqYI26fPrl1ySSGq7r0u3peNaYsWlx/94q2UyK0XBEbzihkA75xadf
      Y7k+5VLhyWXgjmj2XHrtXVKpDJ7rsn3/a8ahwmRsYI0HICns7zdJ5/Lc/uITTMdjfXOTer3O
      V5/+P2ypgGv2UZWAtW2dXFrFdS1u3bqLqoR4ocxBa598ofDMNfJx9rce8GCng95tImkZOnub
      bDU7NGpVvvrqJrVanftf32RgOOyuPyBfqZFQozu6dKEuhnOsCYraQB+PaO618H2bRCZHSlG5
      cqXM0kKD4cSnWi3h2haqlsYyJlgTnQN9gJs2MbSH95QpZpPogz7NzoCZQopdM0leUyClgaJR
      zD15W5h8Mc92d4zitFBrDTY2tllcbLC7+YCFlVdptVogJymkoDc0SakSy9e+R293l2q9Rr2U
      pt3uIKspCqkEvcmQwcRnrlrh4KBNNp1kc32X2doN5pcuYY77xy6Dna01tGRAsCsz6LVp1OuM
      RkOC0CMRqnSatyjUa3RGLkvLy+y2dWozFWRsvEDDcQySqs391SZjQyPhjRkEPtVKieFQx9pr
      UpgpsdMxWK49f8FOpT7HQecuWq1KuZBl0gPLMPDDkGq1BsDC4hL3N/ao1uuktWhvv3JxNoHC
      ANv18V0bWdVwbIuEHNIb21TLJTRNZXd7i0p9Hr3fo1GfYW+/TaVcQVEkFBlMw2QwcSimJKxQ
      xTVGlGdm6OljapWHO26qKhOGCoHvoGgpFOmX/Y/GBhCSkEO6Q4tKuYAsge8H+H4AhLiWQahq
      9Ps6V1YuI0kQ+C5b23s0ZuuEoYwqw2jYR9KyuOaYQqmC5Nt0dZO5uSqba5vML1/CdwyQNTLp
      R2EMPGxPIgxcet02hVKFXqdDsVTEsH3UwCKdL5PUFAIpwbi7j5Qq4JgjavVZWnu75Epl0pqK
      oipYpkO73WGmWmQwtEgqPqlcmUG3w8yjCrp0OnPsvsjTOOaYZmdIvZzF9BUSoc3YDmnUK2yu
      rpKbaZCUXAxPJim5JAtVMhGG4P8DQ1Q+1urT/KgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Biketype_Start_AVGtrip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End Station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End_AVGWeek' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End_Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End_Station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End_Top' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End_WordCloud' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5xcZ3nvv+dMr9v7anelXXXJKm6SbVwxdgAbHAiEkIQQTHJJAoHc5JNA
      gITgS26uIeVCqAFCILSLsS2MbWHLkm0kq3dptdJqe53e+5z3/rHWSqtts7tTvef7l2bmzHmf
      1by/87anSEIIgYrKMkUutAEqKoVEW2gDVFSySSQW51hnHycu9HOme4jLQw6GnV68gTDBcIy0
      oqDXabEY9dRU2JHUKZBKqTPq8vHk3mM8+dJRDp3tIZZIZvxddQRQKUlSaYXn9p/iG0/sZc/h
      86QVZVH3UQWgUlKk0wo/23OEL3znF3T2jiz5fqoAVEoCIQSHz/bwscd/wImu/qzdVxWAStET
      isT47Nd/zr//dA/ZXrKqAlApak5fGuR3PvU1Lg6M5eT+qgBUihIhBE/tO8aHPvdtQtF4ztpR
      BaBSdAgh+PrPXuLjX/ph1qc816MKQKWoEELwj999hr//xpN5aU91hVApGoQQfPPn+/LW+UEV
      gEoR8dS+43z8i/+d1zZVVwiVouBczzB3PfoFAuFoXttV1wDLjHF/iEM9Q5waGOPimIshTwB3
      KELkdf8Zk15HtdVMY4WN9tpKtrc2csuqJhor7DmzKRZP8v6//XreOz+oAlgWjPqC/OTQGXad
      uMDJ+fbTw1GGvQFODV69TpJgXUMND29bx+/fvpWGclvWbBNC8Hff+Dnne4azds+FoE6B3sCc
      HRrni8/t57nTF0mmF+csdj2SBG+9YQ1/+Rt3sKWlfsn3O97Zx+1/+NiindmWiiqANyCDbj+f
      fXIPu05cIJe/7tu3ruWxd91HS1X5or6fTis88KeP88qJrixbljmqAN5AKELwHy8f4x+e2js5
      p881Rp2WT779Tv7szbciSdKCvrvrlRO8+6++nCPLMkMVwBuEQDTOn3xvF8+evlSQ9u/bsIpv
      /eE7KDebMro+nVZ406P/i6Pne3Ns2dyo5wBvAIY8fh54/HsF6/wAe8738OAX/4tepzej6189
      ebHgnR9UAZQ83eNu3vql79M15iq0KVwcc/PgF/+LrtG5bRFC8I0nXsqTVXOjCqCEGfEFee9X
      f8qQN1BoUyZxBsO8899+yPAcNrn9IXa9fCKPVs2OKoASJRRL8IFvPpHxlCOfjAdC/NZXfkwo
      lpjx86f2HiOZSufZqplRBVCCKELw6Sde5Fjf0mNic8WFURef+OGz09yZhRC8ePhcgayajiqA
      EuS5Uxf5wYFThTZjXp44ep6njndOeS+tKOw5fL5AFk1HFUCJ4YvE+OT/ewGlRHav//onv8If
      iU2+PtM9hD+Uf5+f2VAFUGJ87aXDRbXonQ9XKMLjz/568vWxzr7CGTMDqgBKCEcgxDf2Him0
      GQvm268cY8wXBMhKLp9sogqghPj+/lMEchggniviqTT/8fIxAHqHnQW2ZiqqAEqERCrN9w+c
      LLQZi+Z7+0+QSKXxhyIzfl5dbqPcZsZk0E++voLFZMBk0E37zrq2Bt58y8YZ76fTaibvdYXG
      6qtOe1vXtLBlTYsaD1AqHO4ZYtDtL7QZi8YdirLvwuyuD2ta6miuq2TE6cNk0KEIQTSWwGYx
      EoklsZj0KIqgssyCxx9mcNxD9+A4ep2WD7z9DkZdPhRFIBBYjAZGXF70Wi0VdgsOb5CVjdX0
      DDmQJIlILE5NhQ2BGhBTMjx9/AKlse8zO7uOX5j1s2Gnl55hJ60N1ZgMOsLRxOQZQjyZJJFM
      IcsSoy7f5C6SEIJwNM7AmJsRpw9vIITJaEACbBYjCInTlwZprqvE6QsSjMQYfv3gsHvIgcVo
      UL1BSwFFCG5/7Fvz+tgUOysq7VS7Qrx64mKhTZlEXQOUAOP+EH1F6PKwUAY9AYY8hdvCrSqz
      sm1tKzazcfI9VQAlQNeoi3iR+M4slX63r2Bt11baiSeT7LyhY/I9VQAlwGWHZ9p7Jr0Oi16H
      dM3rKxh1WmaKzbphRR2bmmszbtd6zS6KSa+b8vr6Nq+lzGRkdV1Vxu3kC5NBh06rxRMITb6n
      LoJLgDF/cNp7O9qbqbaaOTvsQCNLrKgs47LDQ32ZDX8kRiAWR6/VkEortFSVcXJgDG84RjSZ
      5Ma2RvyRGAadlhqbBQBvJEoskcJuMuCPxIin0lRaTZzoHwXg3vUr0Wk0HLw8iCRJrKypQCvL
      BKIxEqk0KUWh1m6l1+llRWUZ4XiC37plE8+c7CJ6TXimwagnGopN+3vywfEL0+sKqAIoAdwz
      +M6MeIM4A2Eaym1oXo/Fba+tRALsJgPheIL1jTX0u3x0jjipMBtJphV0Gg1v3bKGY30j7Ovs
      RQiBRpZpqrQz5PYTiMa5eVUT8VSayw4P7bWVDHr8dDs8mHU6trU2IEsSQgjiqTS3dbTQNeYi
      lVYYC4SwGvQ4AiE2NtfiuOZJe4XKCjvDruJx5VB3gUqAj/3glyXh/ZkJt1ZVsOdXxePOoa4B
      SgB5gdkWipmbNqwstAlTUAVQAliuW3wuloe3rWN9Yw0rayow6rTc2t6MWa/DZtTz9q1raa0q
      p9ZmYXNzHXaTgY1NEwvmd25fz70bVmVlYbulYwX1VWVLvk+2UAVQAtTYzEu+hyxJaGUZi16H
      VpbZ2bGCldUVbGiqYUf7CvpdPurKLNy0shEQ3Lt+FbIkTY4+o77pC/HFUG01c/+OTVm5VzZQ
      F8ElQGv14jKvXYsiBJ2jThyBMOF4gssOD3aTgbbqco70DtNUYccRCNPj8NJQbuOFc90oYuJ7
      u892k0im0Gs1S7ZDp9Xw8F3b+P4v9y/5XtlAFUAJsLa+GlmSlhwF1jky1RXZF4lNJsv1XRO1
      5brOY/PKNmY0mVpS+wA2o54bd26mzGoqisgwdQpUArRWl2MzZmcdUEj0Wg1r6qsx6nX89lt2
      FNocQBVASWAx6LmxranQZiyZbS0NGHUTk44/fvc9C84lmgtUAeSJaCpNfyjMGY+XI04Xp9xe
      egJBwsnMktg+eMPqHFuYex7atm7y3xtXNfHgbZsLaM0E6hogR4yEI7wy5uCw08VZj4/BcHhG
      f34JqDIa2FhRzs3VVbypvpa15dO3CR/cvJrPPPFiyTrFyZLEw9vWTr6WJInPPPoOnj9wJuel
      UOdCPQnOIom0wgvDI/ykp4+jTjeLLfnQbrPy3vY23tXWikV39Rn1vq/9lN1nurNjbJ65c20r
      T/35+6e8J4TgA3/3LX68+2CBrFIFkBWEEOwaGOL/nr3AcGTmmNfFUGnQ84drOvjd1aswajTs
      7ezl3V/5UU6LXuSKH33kPTywuWPa+0PjHra+7zMFqQ8G6hpgyVwOBPn9ffv568PHs9r5ATzx
      BF88c56Hdr/EgXEHd65t5aYSXAxvaq7j/o3tM37WXFfJF/7s3Xm26CrqCLBIhBD8YmCIz584
      TTAL++PzIQN/tH4N23Um3vXlH5FWSudne+Kjv80961fN+rkQgoc/8S/sfu1sHq2aQBXAIlCE
      4MvnLvD1zot5D1S/t7Ge+MVRnjxSPPk15+LhbWv5zw+/a97rvMEwO37/c/SO5DfuWZ0CLZC0
      Ivj8idN8rQCdH+ClkTGctVYqs+AflGtqbRYe/+0HM7q2wmbhZ49/FKvZkGOrpqIKYAEIIfhq
      Zxc/utxXUDsuRsLo1zQwY9xjkSBJ8PU/eHgy4iwTNnes4InHP4ZxhiRYuUIVwALYNTDE1zoL
      V9LzWhS7kaq1xbsg/odH7uOudW0L/t49N63nif/z0byJQBVAhlwOBPn88dMU09pT21DOLduK
      74T442/ZyZ/cd8uiXR3u37GJp77059gtmVWcXAqqADIgpSh84eQZQqnc7/YsBAFEG+x85P4d
      RTMb+sQDt/GZd9y9ZD+fe2/ewMvf+iSrmmqyZNnMqALIgN1DI+wfL66sxlcYj8awr6rlX9//
      1qz46y8WjSzxT+95C59++K6sObltbG/mte99lnfcvT0r95sJdRt0HuLpNI+8sI+e4PQMB8WC
      WaPh2QfvY8Th5dHvPEWfK7/Jp5oqbHzrg+9kR8eKnNxfCMEPnj3AX/7rj/EGwlm9tzoCzMPe
      kbGi7vwAkXSa73f3sL2tkVf/9lH++J6b0Mq5/2klCf7gjm28+qlHc9b5J9qR+L233c7Zn36B
      Rx+5C00W/zZ1BJgDIQQffOUABx3Fn5S22mDghbe+GZN2wnnu/LCDf/rlqzxzqivrvkOSBA9s
      Ws0n334nm1fUZffmGXB5cJwvfPcX/Pj5QyTTS/OOVQUwB6ORCA88t4eEsli/zvzyjTt2cFfD
      1A55dmic7756gp8dOUcwtrTqMnajgXdsX8cf3X0TG5vz3/GvZ3DMzX889TLff/YAQ+PT00dm
      giqAOfjx5V7+/vjpQpuRMe9e2cpjN22d8bNYMsXezh72dfZyoHuQc8OOee8nSbCuvoYdHc28
      ZVMHd65tmzUfaCFQRJqkiJBIx3n1RBd7j1xk36HLnL00mrGvlCqAOfiLg0d5dnC40GZkTIvV
      wrMP3JvR/D8ST9Dj9DLkCTAW8NHn78cVGyctRTEaFerKjLTXVlJhsmLSWinXV1BlrKPW1IAs
      5X+3SQhBTPjxpQYIpIeJpN3ExcypWiIRQdfFMIP9KTzjRoJeIy5viPDrI6BGkrGaDVSX29SI
      sNlIC8F5b2mVJBoOR/AnklQZ5/enkbVpNJZRUsoFkroBGqoUGqZcEcGTiuC5ro9pJC0t1lWs
      sq1jpW0NGjm3XSgtkriSFxlPnieiZLYWM5sltm21su31wVAvWajWbadOtxGDbJ1yrSqAWQgl
      k7hihclivFjSQjAUDs8pgEgqxEn3ITq9J0mJzOKRp7aRojd4kd7gRcwaC1uqbmVDxTa0cnan
      RkIojCfPMZQ4RkosLVgmIcKMJI4zmjhBrW4Dzfqb0ckTp8yqAGbBn0gW3clvJgyHo2yZIYOh
      EIKz3mMcdb5KQslOqdVIOsxrjpc45TnMHXX302Zbk5VDsEjaTXfspYyf+JkiEIwnz+FOddNq
      uIMa3RpVALMRyjBbw/UosRhCKGhM092V09HIjO8riTjx3l6MHauRNBPzayUeR9LrF9yhvInp
      nTuUDLBn+BeMRQcXdK9MiaRC/Gr4STrsG3hT/YPoNYvLYSSEYDx5hv74a4hFR1TPT0rEuRzb
      gy/VrwpgNiKLfPqHTx4HIdA1NiHr9STHx0Ejo7WXkY5GSXncGFa0kA6HkI0mEAJNWRkau51o
      14WJTq/TokRjaCsq0NXWLUgE1+9+jEeG2T30c6Lp7J6gzkR34Dyu2DhvbXkPNt3CEuAKodAf
      P8BY8kyOrJuOO9WtngTPhl6zuJ0OfVMz2ppaop3niF7oRFNejsZeRio4URRCW15ByuMhHQiA
      oiBptSAESefEtmT4xDFQBLJOR8q5cP+ja8UyEh7gl4M/yUvnv4Iv4ebpvu/ji7sz/o4QCj2x
      fXnt/FdQR4BZsGoX919jWNECgKljYW7KuqpqAMwbZq58nin21/fpx6MjPD/0M5JKYkn3Wwzh
      VIhnBn7Mb678AGatdc5rhRAMJg7jTBUmzkIdAWahTK/HkAd/mmxTZzISTgZ5YejJgnT+K4RT
      QZ4b/BkpZe6ppCfVw0jiRJ6smk7p/cJ5okyvy2g/vZiQgFarhX2jzxJOZSef/1JwxcY47Ng3
      6+dxJUhP7OX8GTQDqgBmQSvLrCmzF9qMBVFnMuKIXmAo3FtoUyY54z3KeHT6aboQgr7Yq6TJ
      zpbsYlEFMAdbKisKbcKCWFtu4rTnQKHNmMaB8T3T3gukR/Cmp5ctzTeqAObgvqaGogk1zIQK
      /TCRVPHFLjiiI/QFL02+FkIwnDhaQIuuogpgDtrtNjrstkKbkRE6WVBvGim0GbNyxnO1NGpE
      cRNIF4etqgDmQCNJ/ObKlkKbkRHtthAm7eJOr/PBSGSAQGIiVNOZvFBga66iCmAe3tG6gnJ9
      cZcnkoC7Gorfb6kncAEhFNypnkKbMokqgHmoNBj4vY7iKu58PXfW11BlKL65//UMhC8TVXwk
      Rf5OpudDFUAGfGBNOyssxZmL0yDLfGhdPbE8ujsslvHoCL7UUKHNmIIqgAyw6nR8etsNyEW4
      JfSRDWupNiQQBUnVuzAUkWY8VjxnFKAKIGPuaqjjD1bPXOShUNxaU82H1nbgT3gLbUrG+JNj
      hTZhCqoAFsDHN63n9rrcpurLlFarhcdvvRGdLBNNzT39ScZTBD1hfI4AnlEfSlqh7+wQyuvZ
      LqLBGM6BCe/N0csOIoHMIrCGLowS8l1tO+AKEgvH5yx6l2J2/yQhBKcPXibkz6x993hg2nvJ
      RIrL5ye2WEcH3DhHfNM+D3ivVvJRvUEXgF6j4d923syjr77GSXfhnro1RgNfue0Wak1GYCJM
      cS6S8SQBd5CyahuOER/pVJqIP8qZfRdoXtdAJBAlFopTvaKS4Ytj6I06HP0uIoEotW01RANR
      hi+N07apCSEEAXeY1Te2IWtlRrsd6I06atuq6T7ej8lqYN3O6bXAMkFRBGMDHjRaDclEisoa
      G6mUgnPUR2NrFX53GJ1Bi0Yj07a2nqMvd7H19g60Wg0Bbxi9QYtGq2Gk18Wq9Q1cPjdC25o6
      us8O43YEWL+tBeeon1g4Tt2KStIpRR0BFopVp+Obd+zg5poZ4g7zwAqLme/ceRurF+CnFAvH
      GbowStfhHnQGLWa7iWgohsE8sb0bCcQY7BwhGU9RVmNjvM9F0B2msrGCgfPDdL7Wjb3KSjQU
      x2A2cHrveaKhGI4BN+lkGo1Wg8lqpH5VDeN9SwtjFIBj2Mv+588wOuCmrMpCyBfhxK8vcfJA
      N1qdBlkjMXjZgd6gZbTfzYUT/RzZd4H+Sw58rhCuMT/OER/V9WUMXHYQCkTxe0IEvBFG+12M
      9LsZ6nHiGPGqaVEWSzyd5u+Pn+LJvtyEGc7E1qoK/m3nzdSZpqYNP+TYx0l34UqNLoT2GitW
      Q+bBRol4kjOHeth080oMpsWdxyQTKWLRBLay6Tt5qgCWgBCCp/sH+cLJswQWGUOcCXpZ5kNr
      O/jI+rXoNdMH7TOeoxwYfzFn7WeTjXX1aHWFKYk6E+oaYAlIksQ721q4va6Wfz57nl39Q6Sz
      +DyRgNvravmLzevZUFE+63Xl+sJMxxZDtX4FPnGx0GZMogogC9SYjPzjzdt5dO1qvt3VzfND
      w0RSi0/aqpMlbq+r5dG1q7mxunLeoPgKQxWypEERS0sUm2vMWiu1hlX4YsUjAHUKlAN8iQR7
      R8bYMzzKEacbfwbTI5NGw9aqSu6or+E3mptoXODJ808ufwtfIvNA9ELQbl/P3Y0PcDT03UKb
      Mok6AuSAcr2eR9paeKStBSEEA6Ew5/1+jvvcXAz5cSZiRJQUWlmmyqhntd3O+rIyynV6KnQG
      onKKaDqFSZP5z9NibcfnKW4BtFo70GDAItcSVuZPzpsPVAHkCGciyqmQh7NhL5ciAcYSkQln
      BQsYLRJGJrI3JElzPunlvGv6uUKD3sQacxkbLRVssVZSo5+9aFyHfT1nPEeK1iVCK+lotXYg
      SRLVug7CcVUAbzi8yTiv+sbY7x+nOxpYclccTUQZTUR52TfhPrDaZOf2sjpuL6+jSmeccm2N
      qYFaU+OM8bfFwJqyTeg1E0kGqrVrGIwfRqHwLtzqGmCJCCG4FA2wy9XPoYAzq7tAs6GTZG6y
      VfPOmlZWm69mYOsNdPGr4Sdz3v5CkZB4z6oPU26onHyvN/Yq48mzBbRqAnUEWALdET8/GOvm
      dDi/bhFJofBawMHBgINt1ireW7eK1eYyWm2raTCtYDRHOUAXy7ryG6Z0foAm/XacyQsFHwXU
      EWARnA55eMEzzGt+B0oRzLklYGdZLfdXNtGig139/00sHZn3e/mg0lDDQ62/g1Ezff3iSHTS
      E9+Xf6OuQRXAAoimU/zn6EVe9I4UQbefjgS8uaKJu20Sr448XfAFsVbS8ZsrP0CFoXrGz4UQ
      9MT24UwVLkZYFUCG9EWDfHHgDCOJ4niyzkWj3sx95gCO0MmC2nF/0yOssq+d85q0SHIu8iQR
      pTBbuKoAMuCg38G/D50nPE+ey2LCIMls1Q5SLkYL0v4d9W9hQ/m2jFK7J5Qw5yJPERfT/ftz
      jSqAORBC8Jx7iO+MXiyKuf5CkYB18iArpHGyULglY+6sf5B15VsmO78QgoRIkhQpBAK9pMMg
      T/XsjCl+OiPP5F0EqgBmQQjBk85+/nu8uwS7/lUk4Aa9n0blMkoOq64AGGQj9zS+HYuxmqHE
      OGMJF55UgEA6RPq6tmVkbBozldoy6nSVNOvrqNAauRh9nlCeTonTQqMKYDZ+6RrgO6MXS7rz
      X0ECHq4ow5I4gztHJ7DlxnpqytcwmHQTUha3TjLLRjqMzdg0TmJKboPntVIVZyLqCDAjr/nH
      +dLA2ZKc9syGDHxixUbKlBFOuF/LWg5RjcaEYqogpTNmbddJAmq0Wmp0HoxydtddWslArW4b
      +4NjeFIBVQDX0x3x89ne48SU4nYtXgwGWeaxlTfRajRxyX+O874TuGLji7pXnbmZkFZPQEMO
      t1sFtVpBmyFNmqXVO9BJZup0G6nRbWS37xCDiYm/WxXANYRSSf7m8pGS2OpcLPV6E4933IJF
      M+GM5094GAz1MhYdwh1zEEj6psUVaCUdZfoKKg01NFna0OptHAyfx5fOTxEOq2xih60dkxzC
      k+whJnzzfwnQSkbKNS1UaldRrm1FQuJI6BxHwucmr1EF8DpCCL4ydJ69vsJsG+aTu8rr+Vjz
      xhm3KIUQxJUYSSWJjIRW1qGXDZPXdkX72Os/Spr8jpASEjttN7DNso6kEiWiuCfTLF7JiiFL
      MjrJjEGyYdZUY5SnJg5wJD084d4zZTNA9QV6ncMBJ/uWQecHeNk3xm1lddxsn57jSJIkjBrT
      jK4LR0PnORTKfyVHmJhmHQieIpKOcbt9K2VyM2U0Z/x9RSi8Ejg+bSdMTYvChIvD98YuvYGW
      vPPz7ZEuYunMF5jHCtj5r+VkpIv9gYWfcPfGRxhPTj9tVgUA/MI1wFiieDIV5ANHMsZTrsxK
      FHVF+zhYBJ3/CicjXZwIZ+4/pAiF4+HOGT9b9gLwJuM84x4otBkF4RnXAP7U3KVUnUkP+/zF
      Uc7oWg4GTzMUz2wHy5n04kh6Zvxs2Qtgt2eI0AKmAm8kIkqaX7hmF39SpHjRf4hUnhe8maAg
      eNF/iJgyf5XJzujsh2rLWgDhdJLd7uLKV59vdruHiM7yADge6sSTyr+DWqaElSgHgqfmvCYt
      lMk9/5lY1gJ4ze/Any7eulr5IKyk2O+f3kH8qdCC5tmF4kK0j/FZpjcAgXSIQHr2U+9lKwAh
      BPu8y2Pbcz5e9o1OS2l+InxhmgNbMSIQHAnOHlvsTM4drrpsBeBIxrgY9RfajKKgM+xj/Jpd
      sFA6woU55s3FxkBibNaO7k7N/RsvWwEcC7hIqYfgACjAseDVtOZd0b6SePpfQSA4H5258mQ4
      Pff29rIVwIlQcWdRyzdHgi6EEAgh5tw1KVZ6YkOkZ8iNGhNz7xItSwHElDTdEXX6cy2XIn4S
      QsGfDhEogYqT1xNRYozNcNKbmidh8LIUwFAsvOx3f64nqqQZiocZTIwXPJvEYhmITy/Ap5mn
      iy9LZ7iheOk94fJBbzSIpCndqaFrhoWwXtbN+Z1lKYCBWPFXVS8Ew/EIJl3pTg1dqelxAlZ5
      7jTzy3IKNL7MHN8yZSwRwX/doVE0EKHz5dP4x7wEXf4p5wXuQSdjl4Zfvy5Mz5EuUomJqaVn
      yIWrf5zRriGcfVenJt5hF0paIeKfOgoLRRByTz917jvRzfD5foKuAEIIun59lvHLI8RCUfqO
      X5pybVxJEFem+jZVaOcuJrgsRwBvan7/keXIeCKM3TB10egdcdOxYz0jnQN4h13YaspBCFbe
      vIbeoxfRmw107jtFdUstICEUwXDnALWrGjj17GEsFVbM5VaefuyHdOxcTzqZ4vLhLiqbq0nG
      kqSTKdKpNOlUGiWVRqvXoTcbCLn8NG9eiclmJuQOMHyun20P7SAeihEPxTC2mzBYpmbIVhDE
      lMSUlCs1uoo5/+ZlJwAhBIGUugCeCW8qiiKUiaj016lrb6D70AUqm6oxl1lIp9L4xzzIssza
      N20mnUxhLrdiLrOg0WqQtRqa1rcA0LB2BZIE9tpy1tyxkaqWWpRUGmt1GYlIHJ1xYn5+9Of7
      adrYis6gQ9ZqMNnNNG9qAyDg8GKwmqhfOxH8Yq6wojXoiPjDeIZcVDbXTApBIEheVzO5UmvH
      LBuJKLEZ/+ZlFxKZEgp/2nUAZ3Lm/5BsIYQgeLkfY20Vertt5msUBd+FbspWr0TW6Uj4AoRH
      xihb004yGCLmdKMkkthWTVSa0S2wbNJCMckKOyu9eU2ilW3eW/UA1bqpBQV3+w7QHZs5Y/Yy
      HAHIS7qTmNNNKhoj5vQQ6pvwONUYDRgqy0mFIyTDEUx1NcQcbpKBEIbKcjR6PZIs47/QTSoa
      xd7eRioWx3HwOEoiSfODd+fUZgUJwZQBIGsIIRg624etugxbTRkabea1gjNFAjTS9GXtWmPb
      rAJYlovgfKDR60l4/cTGnRirK4m5vCQDIVzHzhC43I/3dCcaw0TFFEmWQZJIx+OIVJpEIEjM
      6SEdn1jQWVubsTQ35Nxmi2yYsQNli1goysiFQYbO9uXk/hIyBml6Me0VhjpsmplHz2U3Amgk
      CV0Of+Qr6Mvt1N956+Rrc2PdjNc13L0z57Zkik7WYJVNBJXcnJPoTQYsFTbSydwEIGklDUZ5
      ugA0koYt5rX8Onhi+ndyYkkRI0sSlgVUX1xOGGUNlVo7wUT2BSBJEq1b27N+32sp19iQZ3m4
      bTCt4nTk4jQ3j2U5BbJrpj8lVKBSa6BWXzn/hUXK9Yvfa9HJWm63bZ32/rIUQN0c5UaXMzV6
      I0262kKbsWga9XPbvtLQxGpjy5T3lqUAGg253U4sVZoMZur11RhnWEgWOxpkVnOiX1cAAAjC
      SURBVOhnXmddQZIk7rLfSLnm6rb0shRAm9FaaBOKkhaDFY0ks8qYeca1YqFJX4tZY5z3OoOs
      520Vd2CUJnbglqUAWo02DHnYCSolNEisNE08Gdea2gprzCLYYM58gV2utfNQ5Z0YJP3yFIBF
      o2WFOgpModVoxfp6xuhGfQ11utJZDJdrbLQZGhf0nVpdJY9U3rs8BSBLEputcztJLTc2WiuQ
      r/GBuMmysYDWLIwbrRsWdYBXpStbfucAV7jZVsOTzsxyYy4Hdtin7qC0GRtZoa+bM6lUMVCt
      LWfNdTs715JWFDwRD+6Qh2A8TDKVAEnCojdTZrIvXwG0m+zU6U1qbABQqzOyxjzdb/5O+438
      xL173rjaQiEjcbf9pimHX5FElGMDJzkxeIoLYxfpdQ2QSM+e/3TZCkAny9xRVscTzr5Cm1Jw
      biurm3EKUa61cZt1C68EjxfAqvnZbllPnb6KtJLmtZ4jvNC5l8N9R0ksIN572QoA4J6KBp52
      9S/r/EAy8ObKplk/32xZzVjSzcVYcU0XV+jr2G5ex67Tz/Kz408zvMjiJstaAI0GCzfZqjkY
      cBbalIJxk72GhnlOxu8pu4mwEmU4kZ/6vfNRpS3H4pZ5dNdHGfKNLOleyy4g5nq6I37+5vKR
      EsqDlj0k4J/ab6Fjhvn/9cSVJL/0vsJo0jXvtblETkD/6S6OdGenZsGy3Aa9lnaTfcZaWcuB
      m+01tJtmjla7HoOs46GKu2jV5z4uYTZ8bg/PP78ra50fVAEgSRLvr+tAv8xOhnWSzO/WdcxY
      KXLW78ha3lbxJrZb1ufQshkQ4BgcZt+e3YQi2S3Nurx+9VloNlp4qHr2veQ3Ig9Vt9BstCz4
      e5I0Ua704Yq7sGtyf5pulc0kBwPs3/8yipL9iaoqgNd5V00bzcvES7TZYObdtSuXdI8Vhnre
      V/0gO603zBiGuFS0koZtlnXYx2SeOfBMztI1LvtF8LVcivj5dM8xkuKNuyTWSTKPrbqR1eay
      rN0zqaQ4F+3mbOTytMRaC8Uqm1lvXslmcwfnBjv59K7HSOYwj6sqgOt4zj3It0a6Cm1GzvhQ
      wxrelqPpnhCC0aSL/vgIQwkHzqQ3oyd3lbaMJn0tKw1NNOprkCWZEf8Yf/KjvyCY4zSWy/oc
      YCYeqGymNxrkRe/S9peLkTdXNPIbVStydn9JkmjU19Con9hVS4k03lQAfzpEVImRVFIIQCdp
      McsG7ForFVo7OmlqN0wraf7x+X/OeecHVQDTkCWJDzeuw52Mv6GKaGy1VvJo47opHp+5Ritp
      qNFVzJue8HqePPkM50fzU6BPXQTPgE6W+Z8tm9lomT3IupTYaCnnr1puQC8X/8/tDLr43sEf
      5a294v8fKRBmjZZPtm5lk6W04wY2WSr4VOtWTCWQCkYIwQ8O/4RIIpK3NlUBzIFZo+XTbVu5
      q7y+0KYsijvL6/lU65aS6PwAjqCL58+9mNc2S+N/poDoZQ0fbd5Ik8HCj8d78pJXdKnIwPvq
      2nmkpi2vc/6l8oszz5FS8ht7oAogA2RJ4t21K+kw2fnq8HlcyeKtL1ClNfCxFRvZbC2dmF6A
      ZDqZ96c/qFOgBbHVVsU/d+zgvorGnGRQXgoSE/ENX1p9a8l1foCj/SfxRqaXOMo16giwQKxa
      HX/avIF7Khr4r9FLXIxOL+uTb1YarTzauI71JbxrdbD3SEHaVU+Cl4AQgkMBJz939tFdACG0
      GKy8p24lO+y1JTXXvx5FKHzgP/8HI/7pZU5zjToCLAFJkthRVsut9hpOhzz8yjPM4YCTdA4X
      ylpJYrutmgcqm9lirSzpjn8FZ9BdkM4PqgCygiRJbLFVscVWRTCV4GDAyUG/g/NhH/EsZFQw
      yBo2mMvZWVbLLfYa7NrSy905F72uvoK1rQogy9i0eu6vbOL+yiaSikJXxE9PNEB3NMBwPIwz
      GSc0h3ejVaOlTm+iyWBhldHGanMZHSY7uhI4xV0sA96hgrWtCiCH6GSZTdYKNl2XhS6pKATT
      CRKKQgqBBgmTrMGs0ZWEu0K2cQRnT0qg0+jY1ryZzvFLBGNXo8HKTHaMOiPjAQcmnYkKcznl
      JjveqJ9R/xh2o41gLDTpjaqRNayrW82563yMVAEUAJ0sUynPn8l4ueCfYwMhlU6RVFJsqF+L
      XqsjEA0STyVoKm/AF/XTXt3Gwd6jrKlrxx3yYDVY+ODO9zPgGcIRdLKtZQtdYxcJJyKUm8q5
      o30HKSVNWklh1ptVAagUnsgc2fk0sgYhBCP+USotlXijfmwGC73ufiKJCNFkDEUo9LsHiacS
      hOIhTg6dwRl0odVoOTN8jhHfKM6QG5vBiiIUam01pJQUvohf3QZVKTx/+/TnC3YOsPwmnCpF
      h3aJznp1thrW16/Bop8a5K/X6qed2NfaatjStGkyFaQ6BVIpOHbD0rJLGHVGQKLSUsHaug5C
      8TBbmjcxFnAw6h+jzGTHYrDgDLqIJCJcdHRzc9uNjAbG1RFApfBULdF3KZFKvC4CGPaNkEwn
      GfaN4g67EQh6XP2E42HSShohBOsb1jLqH2fAPaiOACqFp6FsafEWo4FxRgNT6xj0uqcm8z02
      4J3897XnDuoIoFJwVlW3FaxtVQAqBae1sgWTrjC1m1UBqBQcnUbLhoa1BWlbFYBKwZEkidvb
      dxSkbVUAKkXBmzp2Tqn1lS9UAagUBRXmcm5s2Zr3dlUBqBQFkiTxzq1vz3u7qgBUioZb2raz
      pq4jr22qAlApGmRJ5oM735/fNvPamorKPNzcup1b2m7MW3uqAFSKCkmS+Og9f4xZn59qPaoA
      VIqOxrJ6/uzuD+elLVUAKkXJW9bfy9s2PZDzdlQBqBQlE1OhP2Jr8+actqMKQKVo0Wl0fO6h
      T7G+fk3O2lAFoFLUWA0W/vcjn8vZSKAGxauUBMl0kn/Z81V2n9+T1fuqAlApGYQQPH/+Rb68
      95vEU9mp0aAKQKXkGPQO8+W93+DYwMkl3+v/A2SrhmiGfmgVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hourly' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MemberType' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Member_End' width='192'>
      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
      kg4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Member_End_AVGtrip' width='192'>
      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
      gJiR5v8DgY6tXVulTWQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Member_Start' width='192'>
      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
      aAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Member_Start_AVGtrip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Membertype' width='192'>
      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
      w3MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='RouteFrequency' width='192'>
      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
      ObEB/mzbFP4NQpub2n6YHSgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='STORY' width='192'>
      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
      w/8H9ECm7dR2rA8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Start Station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Start_AVGWeek' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Start_Month' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Start_Station' width='192'>
      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
      bp36gcNRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Start_Top' width='192'>
      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
      9Kc/5a//96cjuZyLa/f5i1tvDguAx2cff0IsX0JOBxWjdv3WvyE3gusm9bst8BaObgP0m3Xe
      /u4/B90kap7NU1yFOKkjAVBBwFd373P54jSOJ6dDi/PtyCqQ0iJcv36dmZkJYnKPAHHOHVkC
      xNNJVhdu80//9P/oyxJAnHNHL4sSTTJRyqMHDpYtARDn29DdoG9cu4a7sk0hFR11PUKM1JCj
      EgF3v1rE8B3acjKcOOeGHpYb9NrcW90iJpdHF+fckFUgnUQ8xuRkQY6DiXNv+HWBLlzA7Xcf
      XRxXiPNqaAB03UB5Lo57Nq/1IsRJDQ1At93CRcM0ZCVInG9HjwQHHko7vDCu/rAfwHO4v7iA
      T4TewCaTKxHXPSZm5zElI+IMOxKAg81l7HiZCxM9+o5POmaiaRrxdJ6o5jNWHGNnq4YTjzOt
      IbdIGjLeWblF0qjv5oPitfuujgRgbOYNqn/4giCa4Y304YGwwPfpWV2S4xN02m0uX3kTEx9P
      bpE0dLyzcoukkV/QVuP1+66++Z+abnDz3fee+D8jGufqtWsAFPNjTzwmDTHiLJOr34pQkwCI
      UJMAiFCTAIhQkwCIUJMAiFCTAIhQkwCIUJMAiFCTAIhQkwCIUJMAiFCTAIhQO1EAlO+xur6B
      O7C4c2eBxkGbTquJG8iZoOJsO9mdsHWDqGky6HcZeIpGbRcn0LmeHZOGmCHjSUPMU5yFhphh
      lO+ys12FySmiuocey1IwA1xpiBk6njTEPMVZaIgZ+kQzynfeO7wtzdTU1BOPSUOMOMtkI1iE
      mgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECE2sn6AZQi
      UApN0wiCYOSnrQrxqpysHyDw+PLuEvPjOe5v7ZNI5ogbHjPzlzC0w1OiT/O06NfplOzTnhbD
      vE71vG61nLAjzKSYH8NzPcqlAvu1A4JYDP2xWyQ9/GCn0RF2XBPOyOtRx9cz6h9AEARPrWfk
      HWHPGPM0vqsTd4T1rDax0gRav8f1a5fRCeQWSU8Z73XqCDuunpF3hHGGO8LevHz18I987onH
      XqdFmhDPS7ZmRahJAESoSQBEqEkARKhJAESoSQBEqEkARKhJAESoSQBEqEkARKhJAESoSQBE
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Start_WordCloud' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekday_Weekend' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
